-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Taco.InputObject exposing (..)


import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Taco.Object
import Taco.Interface
import Taco.Union
import Taco.Scalar
import Taco.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)
import Taco.Enum.TermObjectsConnectionOrderbyEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.ContentTypeEnum
import Taco.Enum.OrderEnum
import Taco.Enum.CommentsConnectionOrderbyEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.ContentTypeEnum
import Taco.Enum.OrderEnum
import Taco.Enum.CommentsConnectionOrderbyEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.MediaItemStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostObjectsConnectionDateColumnEnum
import Taco.Enum.RelationEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.ContentTypeEnum
import Taco.Enum.OrderEnum
import Taco.Enum.CommentsConnectionOrderbyEnum
import Taco.Enum.MenuLocationEnum
import Taco.Enum.MenuLocationEnum
import Taco.Enum.MenuLocationEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.ContentTypeEnum
import Taco.Enum.OrderEnum
import Taco.Enum.CommentsConnectionOrderbyEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostObjectsConnectionOrderbyEnum
import Taco.Enum.OrderEnum
import Taco.Enum.TermObjectsConnectionOrderbyEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.ContentTypeEnum
import Taco.Enum.OrderEnum
import Taco.Enum.CommentsConnectionOrderbyEnum
import Taco.Enum.TermObjectsConnectionOrderbyEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.TermObjectsConnectionOrderbyEnum
import Taco.Enum.TermObjectsConnectionOrderbyEnum
import Taco.Enum.TaxonomyEnum
import Taco.Enum.TermObjectsConnectionOrderbyEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.ContentTypeEnum
import Taco.Enum.OrderEnum
import Taco.Enum.CommentsConnectionOrderbyEnum
import Taco.Enum.ContentTypeEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MenuLocationEnum
import Taco.Enum.MenuLocationEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.TermObjectsConnectionOrderbyEnum
import Taco.Enum.TermObjectsConnectionOrderbyEnum
import Taco.Enum.TermObjectsConnectionOrderbyEnum
import Taco.Enum.TaxonomyEnum
import Taco.Enum.ContentTypeEnum
import Taco.Enum.UserRoleEnum
import Taco.Enum.UserRoleEnum
import Taco.Enum.UserRoleEnum
import Taco.Enum.UsersConnectionSearchColumnEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.MediaItemStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.ContentTypeEnum
import Taco.Enum.OrderEnum
import Taco.Enum.CommentsConnectionOrderbyEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.MimeTypeEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.PostStatusEnum
import Taco.Enum.UsersConnectionOrderbyEnum
import Taco.Enum.OrderEnum



buildCategoryToCategoryConnectionWhereArgs : (CategoryToCategoryConnectionWhereArgsOptionalFields -> CategoryToCategoryConnectionWhereArgsOptionalFields)
 -> CategoryToCategoryConnectionWhereArgs
buildCategoryToCategoryConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { cacheDomain = Absent, childOf = Absent, childless = Absent, descriptionLike = Absent, exclude = Absent, excludeTree = Absent, hideEmpty = Absent, hierarchical = Absent, include = Absent, name = Absent, nameLike = Absent, objectIds = Absent, orderby = Absent, padCounts = Absent, parent = Absent, search = Absent, slug = Absent, termTaxonomId = Absent, updateTermMetaCache = Absent }
    in
    { cacheDomain = optionals____.cacheDomain, childOf = optionals____.childOf, childless = optionals____.childless, descriptionLike = optionals____.descriptionLike, exclude = optionals____.exclude, excludeTree = optionals____.excludeTree, hideEmpty = optionals____.hideEmpty, hierarchical = optionals____.hierarchical, include = optionals____.include, name = optionals____.name, nameLike = optionals____.nameLike, objectIds = optionals____.objectIds, orderby = optionals____.orderby, padCounts = optionals____.padCounts, parent = optionals____.parent, search = optionals____.search, slug = optionals____.slug, termTaxonomId = optionals____.termTaxonomId, updateTermMetaCache = optionals____.updateTermMetaCache }


type alias CategoryToCategoryConnectionWhereArgsOptionalFields =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }


{-| Type for the CategoryToCategoryConnectionWhereArgs input object.
-}
type alias CategoryToCategoryConnectionWhereArgs =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }
    

{-| Encode a CategoryToCategoryConnectionWhereArgs into a value that can be used as an argument.
-}
encodeCategoryToCategoryConnectionWhereArgs : CategoryToCategoryConnectionWhereArgs -> Value
encodeCategoryToCategoryConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "cacheDomain", (Encode.string)  |> Encode.optional input____.cacheDomain ), ( "childOf", (Encode.int)  |> Encode.optional input____.childOf ), ( "childless", (Encode.bool)  |> Encode.optional input____.childless ), ( "descriptionLike", (Encode.string)  |> Encode.optional input____.descriptionLike ), ( "exclude", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.exclude ), ( "excludeTree", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.excludeTree ), ( "hideEmpty", (Encode.bool)  |> Encode.optional input____.hideEmpty ), ( "hierarchical", (Encode.bool)  |> Encode.optional input____.hierarchical ), ( "include", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.include ), ( "name", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.name ), ( "nameLike", (Encode.string)  |> Encode.optional input____.nameLike ), ( "objectIds", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.objectIds ), ( "orderby", ((Encode.enum Taco.Enum.TermObjectsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "padCounts", (Encode.bool)  |> Encode.optional input____.padCounts ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "slug", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.slug ), ( "termTaxonomId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.termTaxonomId ), ( "updateTermMetaCache", (Encode.bool)  |> Encode.optional input____.updateTermMetaCache ) ]


buildCategoryToContentNodeConnectionWhereArgs : (CategoryToContentNodeConnectionWhereArgsOptionalFields -> CategoryToContentNodeConnectionWhereArgsOptionalFields)
 -> CategoryToContentNodeConnectionWhereArgs
buildCategoryToContentNodeConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias CategoryToContentNodeConnectionWhereArgsOptionalFields =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the CategoryToContentNodeConnectionWhereArgs input object.
-}
type alias CategoryToContentNodeConnectionWhereArgs =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a CategoryToContentNodeConnectionWhereArgs into a value that can be used as an argument.
-}
encodeCategoryToContentNodeConnectionWhereArgs : CategoryToContentNodeConnectionWhereArgs -> Value
encodeCategoryToContentNodeConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildCategoryToPostConnectionWhereArgs : (CategoryToPostConnectionWhereArgsOptionalFields -> CategoryToPostConnectionWhereArgsOptionalFields)
 -> CategoryToPostConnectionWhereArgs
buildCategoryToPostConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, categoryId = Absent, categoryIn = Absent, categoryName = Absent, categoryNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, tag = Absent, tagId = Absent, tagIn = Absent, tagNotIn = Absent, tagSlugAnd = Absent, tagSlugIn = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, categoryId = optionals____.categoryId, categoryIn = optionals____.categoryIn, categoryName = optionals____.categoryName, categoryNotIn = optionals____.categoryNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, tag = optionals____.tag, tagId = optionals____.tagId, tagIn = optionals____.tagIn, tagNotIn = optionals____.tagNotIn, tagSlugAnd = optionals____.tagSlugAnd, tagSlugIn = optionals____.tagSlugIn, title = optionals____.title }


type alias CategoryToPostConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }


{-| Type for the CategoryToPostConnectionWhereArgs input object.
-}
type alias CategoryToPostConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }
    

{-| Encode a CategoryToPostConnectionWhereArgs into a value that can be used as an argument.
-}
encodeCategoryToPostConnectionWhereArgs : CategoryToPostConnectionWhereArgs -> Value
encodeCategoryToPostConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "categoryId", (Encode.int)  |> Encode.optional input____.categoryId ), ( "categoryIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryIn ), ( "categoryName", (Encode.string)  |> Encode.optional input____.categoryName ), ( "categoryNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "tag", (Encode.string)  |> Encode.optional input____.tag ), ( "tagId", (Encode.string)  |> Encode.optional input____.tagId ), ( "tagIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagIn ), ( "tagNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagNotIn ), ( "tagSlugAnd", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugAnd ), ( "tagSlugIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugIn ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildCommentToCommentConnectionWhereArgs : (CommentToCommentConnectionWhereArgsOptionalFields -> CommentToCommentConnectionWhereArgsOptionalFields)
 -> CommentToCommentConnectionWhereArgs
buildCommentToCommentConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorEmail = Absent, authorIn = Absent, authorNotIn = Absent, authorUrl = Absent, commentIn = Absent, commentNotIn = Absent, commentType = Absent, commentTypeIn = Absent, commentTypeNotIn = Absent, contentAuthor = Absent, contentAuthorIn = Absent, contentAuthorNotIn = Absent, contentId = Absent, contentIdIn = Absent, contentIdNotIn = Absent, contentName = Absent, contentParent = Absent, contentStatus = Absent, contentType = Absent, includeUnapproved = Absent, karma = Absent, order = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, search = Absent, status = Absent, userId = Absent }
    in
    { authorEmail = optionals____.authorEmail, authorIn = optionals____.authorIn, authorNotIn = optionals____.authorNotIn, authorUrl = optionals____.authorUrl, commentIn = optionals____.commentIn, commentNotIn = optionals____.commentNotIn, commentType = optionals____.commentType, commentTypeIn = optionals____.commentTypeIn, commentTypeNotIn = optionals____.commentTypeNotIn, contentAuthor = optionals____.contentAuthor, contentAuthorIn = optionals____.contentAuthorIn, contentAuthorNotIn = optionals____.contentAuthorNotIn, contentId = optionals____.contentId, contentIdIn = optionals____.contentIdIn, contentIdNotIn = optionals____.contentIdNotIn, contentName = optionals____.contentName, contentParent = optionals____.contentParent, contentStatus = optionals____.contentStatus, contentType = optionals____.contentType, includeUnapproved = optionals____.includeUnapproved, karma = optionals____.karma, order = optionals____.order, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, search = optionals____.search, status = optionals____.status, userId = optionals____.userId }


type alias CommentToCommentConnectionWhereArgsOptionalFields =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the CommentToCommentConnectionWhereArgs input object.
-}
type alias CommentToCommentConnectionWhereArgs =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a CommentToCommentConnectionWhereArgs into a value that can be used as an argument.
-}
encodeCommentToCommentConnectionWhereArgs : CommentToCommentConnectionWhereArgs -> Value
encodeCommentToCommentConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "authorEmail", (Encode.string)  |> Encode.optional input____.authorEmail ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "authorUrl", (Encode.string)  |> Encode.optional input____.authorUrl ), ( "commentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentIn ), ( "commentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentNotIn ), ( "commentType", (Encode.string)  |> Encode.optional input____.commentType ), ( "commentTypeIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentTypeIn ), ( "commentTypeNotIn", (Encode.string)  |> Encode.optional input____.commentTypeNotIn ), ( "contentAuthor", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthor ), ( "contentAuthorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorIn ), ( "contentAuthorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorNotIn ), ( "contentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.contentId ), ( "contentIdIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdIn ), ( "contentIdNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdNotIn ), ( "contentName", (Encode.string)  |> Encode.optional input____.contentName ), ( "contentParent", (Encode.int)  |> Encode.optional input____.contentParent ), ( "contentStatus", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentStatus ), ( "contentType", ((Encode.enum Taco.Enum.ContentTypeEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentType ), ( "includeUnapproved", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.includeUnapproved ), ( "karma", (Encode.int)  |> Encode.optional input____.karma ), ( "order", ((Encode.enum Taco.Enum.OrderEnum.toString))  |> Encode.optional input____.order ), ( "orderby", ((Encode.enum Taco.Enum.CommentsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "status", (Encode.string)  |> Encode.optional input____.status ), ( "userId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.userId ) ]


buildCommentToParentCommentConnectionWhereArgs : (CommentToParentCommentConnectionWhereArgsOptionalFields -> CommentToParentCommentConnectionWhereArgsOptionalFields)
 -> CommentToParentCommentConnectionWhereArgs
buildCommentToParentCommentConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorEmail = Absent, authorIn = Absent, authorNotIn = Absent, authorUrl = Absent, commentIn = Absent, commentNotIn = Absent, commentType = Absent, commentTypeIn = Absent, commentTypeNotIn = Absent, contentAuthor = Absent, contentAuthorIn = Absent, contentAuthorNotIn = Absent, contentId = Absent, contentIdIn = Absent, contentIdNotIn = Absent, contentName = Absent, contentParent = Absent, contentStatus = Absent, contentType = Absent, includeUnapproved = Absent, karma = Absent, order = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, search = Absent, status = Absent, userId = Absent }
    in
    { authorEmail = optionals____.authorEmail, authorIn = optionals____.authorIn, authorNotIn = optionals____.authorNotIn, authorUrl = optionals____.authorUrl, commentIn = optionals____.commentIn, commentNotIn = optionals____.commentNotIn, commentType = optionals____.commentType, commentTypeIn = optionals____.commentTypeIn, commentTypeNotIn = optionals____.commentTypeNotIn, contentAuthor = optionals____.contentAuthor, contentAuthorIn = optionals____.contentAuthorIn, contentAuthorNotIn = optionals____.contentAuthorNotIn, contentId = optionals____.contentId, contentIdIn = optionals____.contentIdIn, contentIdNotIn = optionals____.contentIdNotIn, contentName = optionals____.contentName, contentParent = optionals____.contentParent, contentStatus = optionals____.contentStatus, contentType = optionals____.contentType, includeUnapproved = optionals____.includeUnapproved, karma = optionals____.karma, order = optionals____.order, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, search = optionals____.search, status = optionals____.status, userId = optionals____.userId }


type alias CommentToParentCommentConnectionWhereArgsOptionalFields =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the CommentToParentCommentConnectionWhereArgs input object.
-}
type alias CommentToParentCommentConnectionWhereArgs =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a CommentToParentCommentConnectionWhereArgs into a value that can be used as an argument.
-}
encodeCommentToParentCommentConnectionWhereArgs : CommentToParentCommentConnectionWhereArgs -> Value
encodeCommentToParentCommentConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "authorEmail", (Encode.string)  |> Encode.optional input____.authorEmail ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "authorUrl", (Encode.string)  |> Encode.optional input____.authorUrl ), ( "commentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentIn ), ( "commentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentNotIn ), ( "commentType", (Encode.string)  |> Encode.optional input____.commentType ), ( "commentTypeIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentTypeIn ), ( "commentTypeNotIn", (Encode.string)  |> Encode.optional input____.commentTypeNotIn ), ( "contentAuthor", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthor ), ( "contentAuthorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorIn ), ( "contentAuthorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorNotIn ), ( "contentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.contentId ), ( "contentIdIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdIn ), ( "contentIdNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdNotIn ), ( "contentName", (Encode.string)  |> Encode.optional input____.contentName ), ( "contentParent", (Encode.int)  |> Encode.optional input____.contentParent ), ( "contentStatus", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentStatus ), ( "contentType", ((Encode.enum Taco.Enum.ContentTypeEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentType ), ( "includeUnapproved", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.includeUnapproved ), ( "karma", (Encode.int)  |> Encode.optional input____.karma ), ( "order", ((Encode.enum Taco.Enum.OrderEnum.toString))  |> Encode.optional input____.order ), ( "orderby", ((Encode.enum Taco.Enum.CommentsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "status", (Encode.string)  |> Encode.optional input____.status ), ( "userId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.userId ) ]


buildContentTypeToContentNodeConnectionWhereArgs : (ContentTypeToContentNodeConnectionWhereArgsOptionalFields -> ContentTypeToContentNodeConnectionWhereArgsOptionalFields)
 -> ContentTypeToContentNodeConnectionWhereArgs
buildContentTypeToContentNodeConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias ContentTypeToContentNodeConnectionWhereArgsOptionalFields =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the ContentTypeToContentNodeConnectionWhereArgs input object.
-}
type alias ContentTypeToContentNodeConnectionWhereArgs =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a ContentTypeToContentNodeConnectionWhereArgs into a value that can be used as an argument.
-}
encodeContentTypeToContentNodeConnectionWhereArgs : ContentTypeToContentNodeConnectionWhereArgs -> Value
encodeContentTypeToContentNodeConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildCreateCategoryInput : CreateCategoryInputRequiredFields
 -> (CreateCategoryInputOptionalFields -> CreateCategoryInputOptionalFields)
 -> CreateCategoryInput
buildCreateCategoryInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { aliasOf = Absent, clientMutationId = Absent, description = Absent, parentId = Absent, slug = Absent }
    in
    { aliasOf = optionals____.aliasOf, clientMutationId = optionals____.clientMutationId, description = optionals____.description, name = required____.name, parentId = optionals____.parentId, slug = optionals____.slug }

type alias CreateCategoryInputRequiredFields =
    { name : String }
type alias CreateCategoryInputOptionalFields =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , slug : (OptionalArgument String) }


{-| Type for the CreateCategoryInput input object.
-}
type alias CreateCategoryInput =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , name : String
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , slug : (OptionalArgument String) }
    

{-| Encode a CreateCategoryInput into a value that can be used as an argument.
-}
encodeCreateCategoryInput : CreateCategoryInput -> Value
encodeCreateCategoryInput input____ =
    Encode.maybeObject
        [ ( "aliasOf", (Encode.string)  |> Encode.optional input____.aliasOf ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "name", (Encode.string)  input____.name |> Just ), ( "parentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parentId ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ) ]


buildCreateCommentInput : (CreateCommentInputOptionalFields -> CreateCommentInputOptionalFields)
 -> CreateCommentInput
buildCreateCommentInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { approved = Absent, author = Absent, authorEmail = Absent, authorUrl = Absent, clientMutationId = Absent, commentOn = Absent, content = Absent, date = Absent, parent = Absent, type_ = Absent }
    in
    { approved = optionals____.approved, author = optionals____.author, authorEmail = optionals____.authorEmail, authorUrl = optionals____.authorUrl, clientMutationId = optionals____.clientMutationId, commentOn = optionals____.commentOn, content = optionals____.content, date = optionals____.date, parent = optionals____.parent, type_ = optionals____.type_ }


type alias CreateCommentInputOptionalFields =
    { approved : (OptionalArgument String)
 , author : (OptionalArgument String)
 , authorEmail : (OptionalArgument String)
 , authorUrl : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , commentOn : (OptionalArgument Int)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , type_ : (OptionalArgument String) }


{-| Type for the CreateCommentInput input object.
-}
type alias CreateCommentInput =
    { approved : (OptionalArgument String)
 , author : (OptionalArgument String)
 , authorEmail : (OptionalArgument String)
 , authorUrl : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , commentOn : (OptionalArgument Int)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , type_ : (OptionalArgument String) }
    

{-| Encode a CreateCommentInput into a value that can be used as an argument.
-}
encodeCreateCommentInput : CreateCommentInput -> Value
encodeCreateCommentInput input____ =
    Encode.maybeObject
        [ ( "approved", (Encode.string)  |> Encode.optional input____.approved ), ( "author", (Encode.string)  |> Encode.optional input____.author ), ( "authorEmail", (Encode.string)  |> Encode.optional input____.authorEmail ), ( "authorUrl", (Encode.string)  |> Encode.optional input____.authorUrl ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "commentOn", (Encode.int)  |> Encode.optional input____.commentOn ), ( "content", (Encode.string)  |> Encode.optional input____.content ), ( "date", (Encode.string)  |> Encode.optional input____.date ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "type", (Encode.string)  |> Encode.optional input____.type_ ) ]


buildCreateMediaItemInput : (CreateMediaItemInputOptionalFields -> CreateMediaItemInputOptionalFields)
 -> CreateMediaItemInput
buildCreateMediaItemInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { altText = Absent, authorId = Absent, caption = Absent, clientMutationId = Absent, commentStatus = Absent, date = Absent, dateGmt = Absent, description = Absent, filePath = Absent, fileType = Absent, parentId = Absent, pingStatus = Absent, slug = Absent, status = Absent, title = Absent }
    in
    { altText = optionals____.altText, authorId = optionals____.authorId, caption = optionals____.caption, clientMutationId = optionals____.clientMutationId, commentStatus = optionals____.commentStatus, date = optionals____.date, dateGmt = optionals____.dateGmt, description = optionals____.description, filePath = optionals____.filePath, fileType = optionals____.fileType, parentId = optionals____.parentId, pingStatus = optionals____.pingStatus, slug = optionals____.slug, status = optionals____.status, title = optionals____.title }


type alias CreateMediaItemInputOptionalFields =
    { altText : (OptionalArgument String)
 , authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , caption : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , date : (OptionalArgument String)
 , dateGmt : (OptionalArgument String)
 , description : (OptionalArgument String)
 , filePath : (OptionalArgument String)
 , fileType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , pingStatus : (OptionalArgument String)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.MediaItemStatusEnum.MediaItemStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the CreateMediaItemInput input object.
-}
type alias CreateMediaItemInput =
    { altText : (OptionalArgument String)
 , authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , caption : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , date : (OptionalArgument String)
 , dateGmt : (OptionalArgument String)
 , description : (OptionalArgument String)
 , filePath : (OptionalArgument String)
 , fileType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , pingStatus : (OptionalArgument String)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.MediaItemStatusEnum.MediaItemStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a CreateMediaItemInput into a value that can be used as an argument.
-}
encodeCreateMediaItemInput : CreateMediaItemInput -> Value
encodeCreateMediaItemInput input____ =
    Encode.maybeObject
        [ ( "altText", (Encode.string)  |> Encode.optional input____.altText ), ( "authorId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.authorId ), ( "caption", (Encode.string)  |> Encode.optional input____.caption ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "commentStatus", (Encode.string)  |> Encode.optional input____.commentStatus ), ( "date", (Encode.string)  |> Encode.optional input____.date ), ( "dateGmt", (Encode.string)  |> Encode.optional input____.dateGmt ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "filePath", (Encode.string)  |> Encode.optional input____.filePath ), ( "fileType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.fileType ), ( "parentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parentId ), ( "pingStatus", (Encode.string)  |> Encode.optional input____.pingStatus ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ), ( "status", ((Encode.enum Taco.Enum.MediaItemStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildCreatePageInput : (CreatePageInputOptionalFields -> CreatePageInputOptionalFields)
 -> CreatePageInput
buildCreatePageInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorId = Absent, clientMutationId = Absent, commentStatus = Absent, content = Absent, date = Absent, menuOrder = Absent, parentId = Absent, password = Absent, slug = Absent, status = Absent, title = Absent }
    in
    { authorId = optionals____.authorId, clientMutationId = optionals____.clientMutationId, commentStatus = optionals____.commentStatus, content = optionals____.content, date = optionals____.date, menuOrder = optionals____.menuOrder, parentId = optionals____.parentId, password = optionals____.password, slug = optionals____.slug, status = optionals____.status, title = optionals____.title }


type alias CreatePageInputOptionalFields =
    { authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , menuOrder : (OptionalArgument Int)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , password : (OptionalArgument String)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the CreatePageInput input object.
-}
type alias CreatePageInput =
    { authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , menuOrder : (OptionalArgument Int)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , password : (OptionalArgument String)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a CreatePageInput into a value that can be used as an argument.
-}
encodeCreatePageInput : CreatePageInput -> Value
encodeCreatePageInput input____ =
    Encode.maybeObject
        [ ( "authorId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.authorId ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "commentStatus", (Encode.string)  |> Encode.optional input____.commentStatus ), ( "content", (Encode.string)  |> Encode.optional input____.content ), ( "date", (Encode.string)  |> Encode.optional input____.date ), ( "menuOrder", (Encode.int)  |> Encode.optional input____.menuOrder ), ( "parentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parentId ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildCreatePostFormatInput : CreatePostFormatInputRequiredFields
 -> (CreatePostFormatInputOptionalFields -> CreatePostFormatInputOptionalFields)
 -> CreatePostFormatInput
buildCreatePostFormatInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { aliasOf = Absent, clientMutationId = Absent, description = Absent, slug = Absent }
    in
    { aliasOf = optionals____.aliasOf, clientMutationId = optionals____.clientMutationId, description = optionals____.description, name = required____.name, slug = optionals____.slug }

type alias CreatePostFormatInputRequiredFields =
    { name : String }
type alias CreatePostFormatInputOptionalFields =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , slug : (OptionalArgument String) }


{-| Type for the CreatePostFormatInput input object.
-}
type alias CreatePostFormatInput =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , name : String
 , slug : (OptionalArgument String) }
    

{-| Encode a CreatePostFormatInput into a value that can be used as an argument.
-}
encodeCreatePostFormatInput : CreatePostFormatInput -> Value
encodeCreatePostFormatInput input____ =
    Encode.maybeObject
        [ ( "aliasOf", (Encode.string)  |> Encode.optional input____.aliasOf ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "name", (Encode.string)  input____.name |> Just ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ) ]


buildCreatePostInput : (CreatePostInputOptionalFields -> CreatePostInputOptionalFields)
 -> CreatePostInput
buildCreatePostInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorId = Absent, categories = Absent, clientMutationId = Absent, commentStatus = Absent, content = Absent, date = Absent, excerpt = Absent, menuOrder = Absent, password = Absent, pingStatus = Absent, pinged = Absent, postFormats = Absent, slug = Absent, status = Absent, tags = Absent, title = Absent, toPing = Absent }
    in
    { authorId = optionals____.authorId, categories = optionals____.categories, clientMutationId = optionals____.clientMutationId, commentStatus = optionals____.commentStatus, content = optionals____.content, date = optionals____.date, excerpt = optionals____.excerpt, menuOrder = optionals____.menuOrder, password = optionals____.password, pingStatus = optionals____.pingStatus, pinged = optionals____.pinged, postFormats = optionals____.postFormats, slug = optionals____.slug, status = optionals____.status, tags = optionals____.tags, title = optionals____.title, toPing = optionals____.toPing }


type alias CreatePostInputOptionalFields =
    { authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , categories : (OptionalArgument PostCategoriesInput)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , excerpt : (OptionalArgument String)
 , menuOrder : (OptionalArgument Int)
 , password : (OptionalArgument String)
 , pingStatus : (OptionalArgument String)
 , pinged : (OptionalArgument (List (Maybe String)))
 , postFormats : (OptionalArgument PostPostFormatsInput)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tags : (OptionalArgument PostTagsInput)
 , title : (OptionalArgument String)
 , toPing : (OptionalArgument (List (Maybe String))) }


{-| Type for the CreatePostInput input object.
-}
type alias CreatePostInput =
    { authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , categories : (OptionalArgument PostCategoriesInput)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , excerpt : (OptionalArgument String)
 , menuOrder : (OptionalArgument Int)
 , password : (OptionalArgument String)
 , pingStatus : (OptionalArgument String)
 , pinged : (OptionalArgument (List (Maybe String)))
 , postFormats : (OptionalArgument PostPostFormatsInput)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tags : (OptionalArgument PostTagsInput)
 , title : (OptionalArgument String)
 , toPing : (OptionalArgument (List (Maybe String))) }
    

{-| Encode a CreatePostInput into a value that can be used as an argument.
-}
encodeCreatePostInput : CreatePostInput -> Value
encodeCreatePostInput input____ =
    Encode.maybeObject
        [ ( "authorId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.authorId ), ( "categories", (encodePostCategoriesInput)  |> Encode.optional input____.categories ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "commentStatus", (Encode.string)  |> Encode.optional input____.commentStatus ), ( "content", (Encode.string)  |> Encode.optional input____.content ), ( "date", (Encode.string)  |> Encode.optional input____.date ), ( "excerpt", (Encode.string)  |> Encode.optional input____.excerpt ), ( "menuOrder", (Encode.int)  |> Encode.optional input____.menuOrder ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "pingStatus", (Encode.string)  |> Encode.optional input____.pingStatus ), ( "pinged", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.pinged ), ( "postFormats", (encodePostPostFormatsInput)  |> Encode.optional input____.postFormats ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "tags", (encodePostTagsInput)  |> Encode.optional input____.tags ), ( "title", (Encode.string)  |> Encode.optional input____.title ), ( "toPing", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.toPing ) ]


buildCreateTagInput : CreateTagInputRequiredFields
 -> (CreateTagInputOptionalFields -> CreateTagInputOptionalFields)
 -> CreateTagInput
buildCreateTagInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { aliasOf = Absent, clientMutationId = Absent, description = Absent, slug = Absent }
    in
    { aliasOf = optionals____.aliasOf, clientMutationId = optionals____.clientMutationId, description = optionals____.description, name = required____.name, slug = optionals____.slug }

type alias CreateTagInputRequiredFields =
    { name : String }
type alias CreateTagInputOptionalFields =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , slug : (OptionalArgument String) }


{-| Type for the CreateTagInput input object.
-}
type alias CreateTagInput =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , name : String
 , slug : (OptionalArgument String) }
    

{-| Encode a CreateTagInput into a value that can be used as an argument.
-}
encodeCreateTagInput : CreateTagInput -> Value
encodeCreateTagInput input____ =
    Encode.maybeObject
        [ ( "aliasOf", (Encode.string)  |> Encode.optional input____.aliasOf ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "name", (Encode.string)  input____.name |> Just ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ) ]


buildCreateUserInput : CreateUserInputRequiredFields
 -> (CreateUserInputOptionalFields -> CreateUserInputOptionalFields)
 -> CreateUserInput
buildCreateUserInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { aim = Absent, clientMutationId = Absent, description = Absent, displayName = Absent, email = Absent, firstName = Absent, jabber = Absent, lastName = Absent, locale = Absent, nicename = Absent, nickname = Absent, password = Absent, registered = Absent, richEditing = Absent, roles = Absent, websiteUrl = Absent, yim = Absent }
    in
    { aim = optionals____.aim, clientMutationId = optionals____.clientMutationId, description = optionals____.description, displayName = optionals____.displayName, email = optionals____.email, firstName = optionals____.firstName, jabber = optionals____.jabber, lastName = optionals____.lastName, locale = optionals____.locale, nicename = optionals____.nicename, nickname = optionals____.nickname, password = optionals____.password, registered = optionals____.registered, richEditing = optionals____.richEditing, roles = optionals____.roles, username = required____.username, websiteUrl = optionals____.websiteUrl, yim = optionals____.yim }

type alias CreateUserInputRequiredFields =
    { username : String }
type alias CreateUserInputOptionalFields =
    { aim : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , displayName : (OptionalArgument String)
 , email : (OptionalArgument String)
 , firstName : (OptionalArgument String)
 , jabber : (OptionalArgument String)
 , lastName : (OptionalArgument String)
 , locale : (OptionalArgument String)
 , nicename : (OptionalArgument String)
 , nickname : (OptionalArgument String)
 , password : (OptionalArgument String)
 , registered : (OptionalArgument String)
 , richEditing : (OptionalArgument String)
 , roles : (OptionalArgument (List (Maybe String)))
 , websiteUrl : (OptionalArgument String)
 , yim : (OptionalArgument String) }


{-| Type for the CreateUserInput input object.
-}
type alias CreateUserInput =
    { aim : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , displayName : (OptionalArgument String)
 , email : (OptionalArgument String)
 , firstName : (OptionalArgument String)
 , jabber : (OptionalArgument String)
 , lastName : (OptionalArgument String)
 , locale : (OptionalArgument String)
 , nicename : (OptionalArgument String)
 , nickname : (OptionalArgument String)
 , password : (OptionalArgument String)
 , registered : (OptionalArgument String)
 , richEditing : (OptionalArgument String)
 , roles : (OptionalArgument (List (Maybe String)))
 , username : String
 , websiteUrl : (OptionalArgument String)
 , yim : (OptionalArgument String) }
    

{-| Encode a CreateUserInput into a value that can be used as an argument.
-}
encodeCreateUserInput : CreateUserInput -> Value
encodeCreateUserInput input____ =
    Encode.maybeObject
        [ ( "aim", (Encode.string)  |> Encode.optional input____.aim ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "displayName", (Encode.string)  |> Encode.optional input____.displayName ), ( "email", (Encode.string)  |> Encode.optional input____.email ), ( "firstName", (Encode.string)  |> Encode.optional input____.firstName ), ( "jabber", (Encode.string)  |> Encode.optional input____.jabber ), ( "lastName", (Encode.string)  |> Encode.optional input____.lastName ), ( "locale", (Encode.string)  |> Encode.optional input____.locale ), ( "nicename", (Encode.string)  |> Encode.optional input____.nicename ), ( "nickname", (Encode.string)  |> Encode.optional input____.nickname ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "registered", (Encode.string)  |> Encode.optional input____.registered ), ( "richEditing", (Encode.string)  |> Encode.optional input____.richEditing ), ( "roles", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.roles ), ( "username", (Encode.string)  input____.username |> Just ), ( "websiteUrl", (Encode.string)  |> Encode.optional input____.websiteUrl ), ( "yim", (Encode.string)  |> Encode.optional input____.yim ) ]


buildDateInput : (DateInputOptionalFields -> DateInputOptionalFields)
 -> DateInput
buildDateInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { day = Absent, month = Absent, year = Absent }
    in
    { day = optionals____.day, month = optionals____.month, year = optionals____.year }


type alias DateInputOptionalFields =
    { day : (OptionalArgument Int)
 , month : (OptionalArgument Int)
 , year : (OptionalArgument Int) }


{-| Type for the DateInput input object.
-}
type alias DateInput =
    { day : (OptionalArgument Int)
 , month : (OptionalArgument Int)
 , year : (OptionalArgument Int) }
    

{-| Encode a DateInput into a value that can be used as an argument.
-}
encodeDateInput : DateInput -> Value
encodeDateInput input____ =
    Encode.maybeObject
        [ ( "day", (Encode.int)  |> Encode.optional input____.day ), ( "month", (Encode.int)  |> Encode.optional input____.month ), ( "year", (Encode.int)  |> Encode.optional input____.year ) ]


buildDateQueryInput : (DateQueryInputOptionalFields -> DateQueryInputOptionalFields)
 -> DateQueryInput
buildDateQueryInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { after = Absent, before = Absent, column = Absent, compare = Absent, day = Absent, hour = Absent, inclusive = Absent, minute = Absent, month = Absent, relation = Absent, second = Absent, week = Absent, year = Absent }
    in
    { after = optionals____.after, before = optionals____.before, column = optionals____.column, compare = optionals____.compare, day = optionals____.day, hour = optionals____.hour, inclusive = optionals____.inclusive, minute = optionals____.minute, month = optionals____.month, relation = optionals____.relation, second = optionals____.second, week = optionals____.week, year = optionals____.year }


type alias DateQueryInputOptionalFields =
    { after : (OptionalArgument DateInput)
 , before : (OptionalArgument DateInput)
 , column : (OptionalArgument Taco.Enum.PostObjectsConnectionDateColumnEnum.PostObjectsConnectionDateColumnEnum)
 , compare : (OptionalArgument String)
 , day : (OptionalArgument Int)
 , hour : (OptionalArgument Int)
 , inclusive : (OptionalArgument Bool)
 , minute : (OptionalArgument Int)
 , month : (OptionalArgument Int)
 , relation : (OptionalArgument Taco.Enum.RelationEnum.RelationEnum)
 , second : (OptionalArgument Int)
 , week : (OptionalArgument Int)
 , year : (OptionalArgument Int) }


{-| Type for the DateQueryInput input object.
-}
type alias DateQueryInput =
    { after : (OptionalArgument DateInput)
 , before : (OptionalArgument DateInput)
 , column : (OptionalArgument Taco.Enum.PostObjectsConnectionDateColumnEnum.PostObjectsConnectionDateColumnEnum)
 , compare : (OptionalArgument String)
 , day : (OptionalArgument Int)
 , hour : (OptionalArgument Int)
 , inclusive : (OptionalArgument Bool)
 , minute : (OptionalArgument Int)
 , month : (OptionalArgument Int)
 , relation : (OptionalArgument Taco.Enum.RelationEnum.RelationEnum)
 , second : (OptionalArgument Int)
 , week : (OptionalArgument Int)
 , year : (OptionalArgument Int) }
    

{-| Encode a DateQueryInput into a value that can be used as an argument.
-}
encodeDateQueryInput : DateQueryInput -> Value
encodeDateQueryInput input____ =
    Encode.maybeObject
        [ ( "after", (encodeDateInput)  |> Encode.optional input____.after ), ( "before", (encodeDateInput)  |> Encode.optional input____.before ), ( "column", ((Encode.enum Taco.Enum.PostObjectsConnectionDateColumnEnum.toString))  |> Encode.optional input____.column ), ( "compare", (Encode.string)  |> Encode.optional input____.compare ), ( "day", (Encode.int)  |> Encode.optional input____.day ), ( "hour", (Encode.int)  |> Encode.optional input____.hour ), ( "inclusive", (Encode.bool)  |> Encode.optional input____.inclusive ), ( "minute", (Encode.int)  |> Encode.optional input____.minute ), ( "month", (Encode.int)  |> Encode.optional input____.month ), ( "relation", ((Encode.enum Taco.Enum.RelationEnum.toString))  |> Encode.optional input____.relation ), ( "second", (Encode.int)  |> Encode.optional input____.second ), ( "week", (Encode.int)  |> Encode.optional input____.week ), ( "year", (Encode.int)  |> Encode.optional input____.year ) ]


buildDeleteCategoryInput : DeleteCategoryInputRequiredFields
 -> (DeleteCategoryInputOptionalFields -> DeleteCategoryInputOptionalFields)
 -> DeleteCategoryInput
buildDeleteCategoryInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, id = required____.id }

type alias DeleteCategoryInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias DeleteCategoryInputOptionalFields =
    { clientMutationId : (OptionalArgument String) }


{-| Type for the DeleteCategoryInput input object.
-}
type alias DeleteCategoryInput =
    { clientMutationId : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id }
    

{-| Encode a DeleteCategoryInput into a value that can be used as an argument.
-}
encodeDeleteCategoryInput : DeleteCategoryInput -> Value
encodeDeleteCategoryInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ) ]


buildDeleteCommentInput : DeleteCommentInputRequiredFields
 -> (DeleteCommentInputOptionalFields -> DeleteCommentInputOptionalFields)
 -> DeleteCommentInput
buildDeleteCommentInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent, forceDelete = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, forceDelete = optionals____.forceDelete, id = required____.id }

type alias DeleteCommentInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias DeleteCommentInputOptionalFields =
    { clientMutationId : (OptionalArgument String)
 , forceDelete : (OptionalArgument Bool) }


{-| Type for the DeleteCommentInput input object.
-}
type alias DeleteCommentInput =
    { clientMutationId : (OptionalArgument String)
 , forceDelete : (OptionalArgument Bool)
 , id : Taco.ScalarCodecs.Id }
    

{-| Encode a DeleteCommentInput into a value that can be used as an argument.
-}
encodeDeleteCommentInput : DeleteCommentInput -> Value
encodeDeleteCommentInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "forceDelete", (Encode.bool)  |> Encode.optional input____.forceDelete ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ) ]


buildDeleteMediaItemInput : DeleteMediaItemInputRequiredFields
 -> (DeleteMediaItemInputOptionalFields -> DeleteMediaItemInputOptionalFields)
 -> DeleteMediaItemInput
buildDeleteMediaItemInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent, forceDelete = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, forceDelete = optionals____.forceDelete, id = required____.id }

type alias DeleteMediaItemInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias DeleteMediaItemInputOptionalFields =
    { clientMutationId : (OptionalArgument String)
 , forceDelete : (OptionalArgument Bool) }


{-| Type for the DeleteMediaItemInput input object.
-}
type alias DeleteMediaItemInput =
    { clientMutationId : (OptionalArgument String)
 , forceDelete : (OptionalArgument Bool)
 , id : Taco.ScalarCodecs.Id }
    

{-| Encode a DeleteMediaItemInput into a value that can be used as an argument.
-}
encodeDeleteMediaItemInput : DeleteMediaItemInput -> Value
encodeDeleteMediaItemInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "forceDelete", (Encode.bool)  |> Encode.optional input____.forceDelete ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ) ]


buildDeletePageInput : DeletePageInputRequiredFields
 -> (DeletePageInputOptionalFields -> DeletePageInputOptionalFields)
 -> DeletePageInput
buildDeletePageInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent, forceDelete = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, forceDelete = optionals____.forceDelete, id = required____.id }

type alias DeletePageInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias DeletePageInputOptionalFields =
    { clientMutationId : (OptionalArgument String)
 , forceDelete : (OptionalArgument Bool) }


{-| Type for the DeletePageInput input object.
-}
type alias DeletePageInput =
    { clientMutationId : (OptionalArgument String)
 , forceDelete : (OptionalArgument Bool)
 , id : Taco.ScalarCodecs.Id }
    

{-| Encode a DeletePageInput into a value that can be used as an argument.
-}
encodeDeletePageInput : DeletePageInput -> Value
encodeDeletePageInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "forceDelete", (Encode.bool)  |> Encode.optional input____.forceDelete ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ) ]


buildDeletePostFormatInput : DeletePostFormatInputRequiredFields
 -> (DeletePostFormatInputOptionalFields -> DeletePostFormatInputOptionalFields)
 -> DeletePostFormatInput
buildDeletePostFormatInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, id = required____.id }

type alias DeletePostFormatInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias DeletePostFormatInputOptionalFields =
    { clientMutationId : (OptionalArgument String) }


{-| Type for the DeletePostFormatInput input object.
-}
type alias DeletePostFormatInput =
    { clientMutationId : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id }
    

{-| Encode a DeletePostFormatInput into a value that can be used as an argument.
-}
encodeDeletePostFormatInput : DeletePostFormatInput -> Value
encodeDeletePostFormatInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ) ]


buildDeletePostInput : DeletePostInputRequiredFields
 -> (DeletePostInputOptionalFields -> DeletePostInputOptionalFields)
 -> DeletePostInput
buildDeletePostInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent, forceDelete = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, forceDelete = optionals____.forceDelete, id = required____.id }

type alias DeletePostInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias DeletePostInputOptionalFields =
    { clientMutationId : (OptionalArgument String)
 , forceDelete : (OptionalArgument Bool) }


{-| Type for the DeletePostInput input object.
-}
type alias DeletePostInput =
    { clientMutationId : (OptionalArgument String)
 , forceDelete : (OptionalArgument Bool)
 , id : Taco.ScalarCodecs.Id }
    

{-| Encode a DeletePostInput into a value that can be used as an argument.
-}
encodeDeletePostInput : DeletePostInput -> Value
encodeDeletePostInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "forceDelete", (Encode.bool)  |> Encode.optional input____.forceDelete ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ) ]


buildDeleteTagInput : DeleteTagInputRequiredFields
 -> (DeleteTagInputOptionalFields -> DeleteTagInputOptionalFields)
 -> DeleteTagInput
buildDeleteTagInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, id = required____.id }

type alias DeleteTagInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias DeleteTagInputOptionalFields =
    { clientMutationId : (OptionalArgument String) }


{-| Type for the DeleteTagInput input object.
-}
type alias DeleteTagInput =
    { clientMutationId : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id }
    

{-| Encode a DeleteTagInput into a value that can be used as an argument.
-}
encodeDeleteTagInput : DeleteTagInput -> Value
encodeDeleteTagInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ) ]


buildDeleteUserInput : DeleteUserInputRequiredFields
 -> (DeleteUserInputOptionalFields -> DeleteUserInputOptionalFields)
 -> DeleteUserInput
buildDeleteUserInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent, reassignId = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, id = required____.id, reassignId = optionals____.reassignId }

type alias DeleteUserInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias DeleteUserInputOptionalFields =
    { clientMutationId : (OptionalArgument String)
 , reassignId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the DeleteUserInput input object.
-}
type alias DeleteUserInput =
    { clientMutationId : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id
 , reassignId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a DeleteUserInput into a value that can be used as an argument.
-}
encodeDeleteUserInput : DeleteUserInput -> Value
encodeDeleteUserInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ), ( "reassignId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.reassignId ) ]


buildHierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs : (HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgsOptionalFields -> HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgsOptionalFields)
 -> HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs
buildHierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgsOptionalFields =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs input object.
-}
type alias HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs into a value that can be used as an argument.
-}
encodeHierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs : HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs -> Value
encodeHierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildHierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs : (HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgsOptionalFields -> HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgsOptionalFields)
 -> HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs
buildHierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgsOptionalFields =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs input object.
-}
type alias HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs into a value that can be used as an argument.
-}
encodeHierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs : HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs -> Value
encodeHierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildMediaItemToCommentConnectionWhereArgs : (MediaItemToCommentConnectionWhereArgsOptionalFields -> MediaItemToCommentConnectionWhereArgsOptionalFields)
 -> MediaItemToCommentConnectionWhereArgs
buildMediaItemToCommentConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorEmail = Absent, authorIn = Absent, authorNotIn = Absent, authorUrl = Absent, commentIn = Absent, commentNotIn = Absent, commentType = Absent, commentTypeIn = Absent, commentTypeNotIn = Absent, contentAuthor = Absent, contentAuthorIn = Absent, contentAuthorNotIn = Absent, contentId = Absent, contentIdIn = Absent, contentIdNotIn = Absent, contentName = Absent, contentParent = Absent, contentStatus = Absent, contentType = Absent, includeUnapproved = Absent, karma = Absent, order = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, search = Absent, status = Absent, userId = Absent }
    in
    { authorEmail = optionals____.authorEmail, authorIn = optionals____.authorIn, authorNotIn = optionals____.authorNotIn, authorUrl = optionals____.authorUrl, commentIn = optionals____.commentIn, commentNotIn = optionals____.commentNotIn, commentType = optionals____.commentType, commentTypeIn = optionals____.commentTypeIn, commentTypeNotIn = optionals____.commentTypeNotIn, contentAuthor = optionals____.contentAuthor, contentAuthorIn = optionals____.contentAuthorIn, contentAuthorNotIn = optionals____.contentAuthorNotIn, contentId = optionals____.contentId, contentIdIn = optionals____.contentIdIn, contentIdNotIn = optionals____.contentIdNotIn, contentName = optionals____.contentName, contentParent = optionals____.contentParent, contentStatus = optionals____.contentStatus, contentType = optionals____.contentType, includeUnapproved = optionals____.includeUnapproved, karma = optionals____.karma, order = optionals____.order, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, search = optionals____.search, status = optionals____.status, userId = optionals____.userId }


type alias MediaItemToCommentConnectionWhereArgsOptionalFields =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the MediaItemToCommentConnectionWhereArgs input object.
-}
type alias MediaItemToCommentConnectionWhereArgs =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a MediaItemToCommentConnectionWhereArgs into a value that can be used as an argument.
-}
encodeMediaItemToCommentConnectionWhereArgs : MediaItemToCommentConnectionWhereArgs -> Value
encodeMediaItemToCommentConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "authorEmail", (Encode.string)  |> Encode.optional input____.authorEmail ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "authorUrl", (Encode.string)  |> Encode.optional input____.authorUrl ), ( "commentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentIn ), ( "commentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentNotIn ), ( "commentType", (Encode.string)  |> Encode.optional input____.commentType ), ( "commentTypeIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentTypeIn ), ( "commentTypeNotIn", (Encode.string)  |> Encode.optional input____.commentTypeNotIn ), ( "contentAuthor", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthor ), ( "contentAuthorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorIn ), ( "contentAuthorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorNotIn ), ( "contentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.contentId ), ( "contentIdIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdIn ), ( "contentIdNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdNotIn ), ( "contentName", (Encode.string)  |> Encode.optional input____.contentName ), ( "contentParent", (Encode.int)  |> Encode.optional input____.contentParent ), ( "contentStatus", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentStatus ), ( "contentType", ((Encode.enum Taco.Enum.ContentTypeEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentType ), ( "includeUnapproved", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.includeUnapproved ), ( "karma", (Encode.int)  |> Encode.optional input____.karma ), ( "order", ((Encode.enum Taco.Enum.OrderEnum.toString))  |> Encode.optional input____.order ), ( "orderby", ((Encode.enum Taco.Enum.CommentsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "status", (Encode.string)  |> Encode.optional input____.status ), ( "userId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.userId ) ]


buildMenuItemToMenuItemConnectionWhereArgs : (MenuItemToMenuItemConnectionWhereArgsOptionalFields -> MenuItemToMenuItemConnectionWhereArgsOptionalFields)
 -> MenuItemToMenuItemConnectionWhereArgs
buildMenuItemToMenuItemConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { id = Absent, location = Absent, parentDatabaseId = Absent, parentId = Absent }
    in
    { id = optionals____.id, location = optionals____.location, parentDatabaseId = optionals____.parentDatabaseId, parentId = optionals____.parentId }


type alias MenuItemToMenuItemConnectionWhereArgsOptionalFields =
    { id : (OptionalArgument Int)
 , location : (OptionalArgument Taco.Enum.MenuLocationEnum.MenuLocationEnum)
 , parentDatabaseId : (OptionalArgument Int)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the MenuItemToMenuItemConnectionWhereArgs input object.
-}
type alias MenuItemToMenuItemConnectionWhereArgs =
    { id : (OptionalArgument Int)
 , location : (OptionalArgument Taco.Enum.MenuLocationEnum.MenuLocationEnum)
 , parentDatabaseId : (OptionalArgument Int)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a MenuItemToMenuItemConnectionWhereArgs into a value that can be used as an argument.
-}
encodeMenuItemToMenuItemConnectionWhereArgs : MenuItemToMenuItemConnectionWhereArgs -> Value
encodeMenuItemToMenuItemConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "location", ((Encode.enum Taco.Enum.MenuLocationEnum.toString))  |> Encode.optional input____.location ), ( "parentDatabaseId", (Encode.int)  |> Encode.optional input____.parentDatabaseId ), ( "parentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parentId ) ]


buildMenuItemsWhereArgs : (MenuItemsWhereArgsOptionalFields -> MenuItemsWhereArgsOptionalFields)
 -> MenuItemsWhereArgs
buildMenuItemsWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { id = Absent, location = Absent }
    in
    { id = optionals____.id, location = optionals____.location }


type alias MenuItemsWhereArgsOptionalFields =
    { id : (OptionalArgument Int)
 , location : (OptionalArgument Taco.Enum.MenuLocationEnum.MenuLocationEnum) }


{-| Type for the MenuItemsWhereArgs input object.
-}
type alias MenuItemsWhereArgs =
    { id : (OptionalArgument Int)
 , location : (OptionalArgument Taco.Enum.MenuLocationEnum.MenuLocationEnum) }
    

{-| Encode a MenuItemsWhereArgs into a value that can be used as an argument.
-}
encodeMenuItemsWhereArgs : MenuItemsWhereArgs -> Value
encodeMenuItemsWhereArgs input____ =
    Encode.maybeObject
        [ ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "location", ((Encode.enum Taco.Enum.MenuLocationEnum.toString))  |> Encode.optional input____.location ) ]


buildMenuToMenuItemConnectionWhereArgs : (MenuToMenuItemConnectionWhereArgsOptionalFields -> MenuToMenuItemConnectionWhereArgsOptionalFields)
 -> MenuToMenuItemConnectionWhereArgs
buildMenuToMenuItemConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { id = Absent, location = Absent, parentDatabaseId = Absent, parentId = Absent }
    in
    { id = optionals____.id, location = optionals____.location, parentDatabaseId = optionals____.parentDatabaseId, parentId = optionals____.parentId }


type alias MenuToMenuItemConnectionWhereArgsOptionalFields =
    { id : (OptionalArgument Int)
 , location : (OptionalArgument Taco.Enum.MenuLocationEnum.MenuLocationEnum)
 , parentDatabaseId : (OptionalArgument Int)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the MenuToMenuItemConnectionWhereArgs input object.
-}
type alias MenuToMenuItemConnectionWhereArgs =
    { id : (OptionalArgument Int)
 , location : (OptionalArgument Taco.Enum.MenuLocationEnum.MenuLocationEnum)
 , parentDatabaseId : (OptionalArgument Int)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a MenuToMenuItemConnectionWhereArgs into a value that can be used as an argument.
-}
encodeMenuToMenuItemConnectionWhereArgs : MenuToMenuItemConnectionWhereArgs -> Value
encodeMenuToMenuItemConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "location", ((Encode.enum Taco.Enum.MenuLocationEnum.toString))  |> Encode.optional input____.location ), ( "parentDatabaseId", (Encode.int)  |> Encode.optional input____.parentDatabaseId ), ( "parentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parentId ) ]


buildPageToCommentConnectionWhereArgs : (PageToCommentConnectionWhereArgsOptionalFields -> PageToCommentConnectionWhereArgsOptionalFields)
 -> PageToCommentConnectionWhereArgs
buildPageToCommentConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorEmail = Absent, authorIn = Absent, authorNotIn = Absent, authorUrl = Absent, commentIn = Absent, commentNotIn = Absent, commentType = Absent, commentTypeIn = Absent, commentTypeNotIn = Absent, contentAuthor = Absent, contentAuthorIn = Absent, contentAuthorNotIn = Absent, contentId = Absent, contentIdIn = Absent, contentIdNotIn = Absent, contentName = Absent, contentParent = Absent, contentStatus = Absent, contentType = Absent, includeUnapproved = Absent, karma = Absent, order = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, search = Absent, status = Absent, userId = Absent }
    in
    { authorEmail = optionals____.authorEmail, authorIn = optionals____.authorIn, authorNotIn = optionals____.authorNotIn, authorUrl = optionals____.authorUrl, commentIn = optionals____.commentIn, commentNotIn = optionals____.commentNotIn, commentType = optionals____.commentType, commentTypeIn = optionals____.commentTypeIn, commentTypeNotIn = optionals____.commentTypeNotIn, contentAuthor = optionals____.contentAuthor, contentAuthorIn = optionals____.contentAuthorIn, contentAuthorNotIn = optionals____.contentAuthorNotIn, contentId = optionals____.contentId, contentIdIn = optionals____.contentIdIn, contentIdNotIn = optionals____.contentIdNotIn, contentName = optionals____.contentName, contentParent = optionals____.contentParent, contentStatus = optionals____.contentStatus, contentType = optionals____.contentType, includeUnapproved = optionals____.includeUnapproved, karma = optionals____.karma, order = optionals____.order, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, search = optionals____.search, status = optionals____.status, userId = optionals____.userId }


type alias PageToCommentConnectionWhereArgsOptionalFields =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the PageToCommentConnectionWhereArgs input object.
-}
type alias PageToCommentConnectionWhereArgs =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a PageToCommentConnectionWhereArgs into a value that can be used as an argument.
-}
encodePageToCommentConnectionWhereArgs : PageToCommentConnectionWhereArgs -> Value
encodePageToCommentConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "authorEmail", (Encode.string)  |> Encode.optional input____.authorEmail ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "authorUrl", (Encode.string)  |> Encode.optional input____.authorUrl ), ( "commentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentIn ), ( "commentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentNotIn ), ( "commentType", (Encode.string)  |> Encode.optional input____.commentType ), ( "commentTypeIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentTypeIn ), ( "commentTypeNotIn", (Encode.string)  |> Encode.optional input____.commentTypeNotIn ), ( "contentAuthor", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthor ), ( "contentAuthorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorIn ), ( "contentAuthorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorNotIn ), ( "contentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.contentId ), ( "contentIdIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdIn ), ( "contentIdNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdNotIn ), ( "contentName", (Encode.string)  |> Encode.optional input____.contentName ), ( "contentParent", (Encode.int)  |> Encode.optional input____.contentParent ), ( "contentStatus", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentStatus ), ( "contentType", ((Encode.enum Taco.Enum.ContentTypeEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentType ), ( "includeUnapproved", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.includeUnapproved ), ( "karma", (Encode.int)  |> Encode.optional input____.karma ), ( "order", ((Encode.enum Taco.Enum.OrderEnum.toString))  |> Encode.optional input____.order ), ( "orderby", ((Encode.enum Taco.Enum.CommentsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "status", (Encode.string)  |> Encode.optional input____.status ), ( "userId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.userId ) ]


buildPageToRevisionConnectionWhereArgs : (PageToRevisionConnectionWhereArgsOptionalFields -> PageToRevisionConnectionWhereArgsOptionalFields)
 -> PageToRevisionConnectionWhereArgs
buildPageToRevisionConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias PageToRevisionConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the PageToRevisionConnectionWhereArgs input object.
-}
type alias PageToRevisionConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a PageToRevisionConnectionWhereArgs into a value that can be used as an argument.
-}
encodePageToRevisionConnectionWhereArgs : PageToRevisionConnectionWhereArgs -> Value
encodePageToRevisionConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildPostCategoriesInput : (PostCategoriesInputOptionalFields -> PostCategoriesInputOptionalFields)
 -> PostCategoriesInput
buildPostCategoriesInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { append = Absent, nodes = Absent }
    in
    { append = optionals____.append, nodes = optionals____.nodes }


type alias PostCategoriesInputOptionalFields =
    { append : (OptionalArgument Bool)
 , nodes : (OptionalArgument (List (Maybe PostCategoriesNodeInput))) }


{-| Type for the PostCategoriesInput input object.
-}
type alias PostCategoriesInput =
    { append : (OptionalArgument Bool)
 , nodes : (OptionalArgument (List (Maybe PostCategoriesNodeInput))) }
    

{-| Encode a PostCategoriesInput into a value that can be used as an argument.
-}
encodePostCategoriesInput : PostCategoriesInput -> Value
encodePostCategoriesInput input____ =
    Encode.maybeObject
        [ ( "append", (Encode.bool)  |> Encode.optional input____.append ), ( "nodes", (encodePostCategoriesNodeInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nodes ) ]


buildPostCategoriesNodeInput : (PostCategoriesNodeInputOptionalFields -> PostCategoriesNodeInputOptionalFields)
 -> PostCategoriesNodeInput
buildPostCategoriesNodeInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { description = Absent, id = Absent, name = Absent, slug = Absent }
    in
    { description = optionals____.description, id = optionals____.id, name = optionals____.name, slug = optionals____.slug }


type alias PostCategoriesNodeInputOptionalFields =
    { description : (OptionalArgument String)
 , id : (OptionalArgument Taco.ScalarCodecs.Id)
 , name : (OptionalArgument String)
 , slug : (OptionalArgument String) }


{-| Type for the PostCategoriesNodeInput input object.
-}
type alias PostCategoriesNodeInput =
    { description : (OptionalArgument String)
 , id : (OptionalArgument Taco.ScalarCodecs.Id)
 , name : (OptionalArgument String)
 , slug : (OptionalArgument String) }
    

{-| Encode a PostCategoriesNodeInput into a value that can be used as an argument.
-}
encodePostCategoriesNodeInput : PostCategoriesNodeInput -> Value
encodePostCategoriesNodeInput input____ =
    Encode.maybeObject
        [ ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.id ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ) ]


buildPostFormatToContentNodeConnectionWhereArgs : (PostFormatToContentNodeConnectionWhereArgsOptionalFields -> PostFormatToContentNodeConnectionWhereArgsOptionalFields)
 -> PostFormatToContentNodeConnectionWhereArgs
buildPostFormatToContentNodeConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias PostFormatToContentNodeConnectionWhereArgsOptionalFields =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the PostFormatToContentNodeConnectionWhereArgs input object.
-}
type alias PostFormatToContentNodeConnectionWhereArgs =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a PostFormatToContentNodeConnectionWhereArgs into a value that can be used as an argument.
-}
encodePostFormatToContentNodeConnectionWhereArgs : PostFormatToContentNodeConnectionWhereArgs -> Value
encodePostFormatToContentNodeConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildPostFormatToPostConnectionWhereArgs : (PostFormatToPostConnectionWhereArgsOptionalFields -> PostFormatToPostConnectionWhereArgsOptionalFields)
 -> PostFormatToPostConnectionWhereArgs
buildPostFormatToPostConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, categoryId = Absent, categoryIn = Absent, categoryName = Absent, categoryNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, tag = Absent, tagId = Absent, tagIn = Absent, tagNotIn = Absent, tagSlugAnd = Absent, tagSlugIn = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, categoryId = optionals____.categoryId, categoryIn = optionals____.categoryIn, categoryName = optionals____.categoryName, categoryNotIn = optionals____.categoryNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, tag = optionals____.tag, tagId = optionals____.tagId, tagIn = optionals____.tagIn, tagNotIn = optionals____.tagNotIn, tagSlugAnd = optionals____.tagSlugAnd, tagSlugIn = optionals____.tagSlugIn, title = optionals____.title }


type alias PostFormatToPostConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }


{-| Type for the PostFormatToPostConnectionWhereArgs input object.
-}
type alias PostFormatToPostConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }
    

{-| Encode a PostFormatToPostConnectionWhereArgs into a value that can be used as an argument.
-}
encodePostFormatToPostConnectionWhereArgs : PostFormatToPostConnectionWhereArgs -> Value
encodePostFormatToPostConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "categoryId", (Encode.int)  |> Encode.optional input____.categoryId ), ( "categoryIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryIn ), ( "categoryName", (Encode.string)  |> Encode.optional input____.categoryName ), ( "categoryNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "tag", (Encode.string)  |> Encode.optional input____.tag ), ( "tagId", (Encode.string)  |> Encode.optional input____.tagId ), ( "tagIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagIn ), ( "tagNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagNotIn ), ( "tagSlugAnd", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugAnd ), ( "tagSlugIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugIn ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildPostObjectsConnectionOrderbyInput : PostObjectsConnectionOrderbyInputRequiredFields
 -> PostObjectsConnectionOrderbyInput
buildPostObjectsConnectionOrderbyInput required____ =

    { field = required____.field, order = required____.order }

type alias PostObjectsConnectionOrderbyInputRequiredFields =
    { field : Taco.Enum.PostObjectsConnectionOrderbyEnum.PostObjectsConnectionOrderbyEnum
 , order : Taco.Enum.OrderEnum.OrderEnum }



{-| Type for the PostObjectsConnectionOrderbyInput input object.
-}
type alias PostObjectsConnectionOrderbyInput =
    { field : Taco.Enum.PostObjectsConnectionOrderbyEnum.PostObjectsConnectionOrderbyEnum
 , order : Taco.Enum.OrderEnum.OrderEnum }
    

{-| Encode a PostObjectsConnectionOrderbyInput into a value that can be used as an argument.
-}
encodePostObjectsConnectionOrderbyInput : PostObjectsConnectionOrderbyInput -> Value
encodePostObjectsConnectionOrderbyInput input____ =
    Encode.maybeObject
        [ ( "field", ((Encode.enum Taco.Enum.PostObjectsConnectionOrderbyEnum.toString))  input____.field |> Just ), ( "order", ((Encode.enum Taco.Enum.OrderEnum.toString))  input____.order |> Just ) ]


buildPostPostFormatsInput : (PostPostFormatsInputOptionalFields -> PostPostFormatsInputOptionalFields)
 -> PostPostFormatsInput
buildPostPostFormatsInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { append = Absent, nodes = Absent }
    in
    { append = optionals____.append, nodes = optionals____.nodes }


type alias PostPostFormatsInputOptionalFields =
    { append : (OptionalArgument Bool)
 , nodes : (OptionalArgument (List (Maybe PostPostFormatsNodeInput))) }


{-| Type for the PostPostFormatsInput input object.
-}
type alias PostPostFormatsInput =
    { append : (OptionalArgument Bool)
 , nodes : (OptionalArgument (List (Maybe PostPostFormatsNodeInput))) }
    

{-| Encode a PostPostFormatsInput into a value that can be used as an argument.
-}
encodePostPostFormatsInput : PostPostFormatsInput -> Value
encodePostPostFormatsInput input____ =
    Encode.maybeObject
        [ ( "append", (Encode.bool)  |> Encode.optional input____.append ), ( "nodes", (encodePostPostFormatsNodeInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nodes ) ]


buildPostPostFormatsNodeInput : (PostPostFormatsNodeInputOptionalFields -> PostPostFormatsNodeInputOptionalFields)
 -> PostPostFormatsNodeInput
buildPostPostFormatsNodeInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { description = Absent, id = Absent, name = Absent, slug = Absent }
    in
    { description = optionals____.description, id = optionals____.id, name = optionals____.name, slug = optionals____.slug }


type alias PostPostFormatsNodeInputOptionalFields =
    { description : (OptionalArgument String)
 , id : (OptionalArgument Taco.ScalarCodecs.Id)
 , name : (OptionalArgument String)
 , slug : (OptionalArgument String) }


{-| Type for the PostPostFormatsNodeInput input object.
-}
type alias PostPostFormatsNodeInput =
    { description : (OptionalArgument String)
 , id : (OptionalArgument Taco.ScalarCodecs.Id)
 , name : (OptionalArgument String)
 , slug : (OptionalArgument String) }
    

{-| Encode a PostPostFormatsNodeInput into a value that can be used as an argument.
-}
encodePostPostFormatsNodeInput : PostPostFormatsNodeInput -> Value
encodePostPostFormatsNodeInput input____ =
    Encode.maybeObject
        [ ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.id ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ) ]


buildPostTagsInput : (PostTagsInputOptionalFields -> PostTagsInputOptionalFields)
 -> PostTagsInput
buildPostTagsInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { append = Absent, nodes = Absent }
    in
    { append = optionals____.append, nodes = optionals____.nodes }


type alias PostTagsInputOptionalFields =
    { append : (OptionalArgument Bool)
 , nodes : (OptionalArgument (List (Maybe PostTagsNodeInput))) }


{-| Type for the PostTagsInput input object.
-}
type alias PostTagsInput =
    { append : (OptionalArgument Bool)
 , nodes : (OptionalArgument (List (Maybe PostTagsNodeInput))) }
    

{-| Encode a PostTagsInput into a value that can be used as an argument.
-}
encodePostTagsInput : PostTagsInput -> Value
encodePostTagsInput input____ =
    Encode.maybeObject
        [ ( "append", (Encode.bool)  |> Encode.optional input____.append ), ( "nodes", (encodePostTagsNodeInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nodes ) ]


buildPostTagsNodeInput : (PostTagsNodeInputOptionalFields -> PostTagsNodeInputOptionalFields)
 -> PostTagsNodeInput
buildPostTagsNodeInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { description = Absent, id = Absent, name = Absent, slug = Absent }
    in
    { description = optionals____.description, id = optionals____.id, name = optionals____.name, slug = optionals____.slug }


type alias PostTagsNodeInputOptionalFields =
    { description : (OptionalArgument String)
 , id : (OptionalArgument Taco.ScalarCodecs.Id)
 , name : (OptionalArgument String)
 , slug : (OptionalArgument String) }


{-| Type for the PostTagsNodeInput input object.
-}
type alias PostTagsNodeInput =
    { description : (OptionalArgument String)
 , id : (OptionalArgument Taco.ScalarCodecs.Id)
 , name : (OptionalArgument String)
 , slug : (OptionalArgument String) }
    

{-| Encode a PostTagsNodeInput into a value that can be used as an argument.
-}
encodePostTagsNodeInput : PostTagsNodeInput -> Value
encodePostTagsNodeInput input____ =
    Encode.maybeObject
        [ ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.id ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ) ]


buildPostToCategoryConnectionWhereArgs : (PostToCategoryConnectionWhereArgsOptionalFields -> PostToCategoryConnectionWhereArgsOptionalFields)
 -> PostToCategoryConnectionWhereArgs
buildPostToCategoryConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { cacheDomain = Absent, childOf = Absent, childless = Absent, descriptionLike = Absent, exclude = Absent, excludeTree = Absent, hideEmpty = Absent, hierarchical = Absent, include = Absent, name = Absent, nameLike = Absent, objectIds = Absent, orderby = Absent, padCounts = Absent, parent = Absent, search = Absent, slug = Absent, termTaxonomId = Absent, updateTermMetaCache = Absent }
    in
    { cacheDomain = optionals____.cacheDomain, childOf = optionals____.childOf, childless = optionals____.childless, descriptionLike = optionals____.descriptionLike, exclude = optionals____.exclude, excludeTree = optionals____.excludeTree, hideEmpty = optionals____.hideEmpty, hierarchical = optionals____.hierarchical, include = optionals____.include, name = optionals____.name, nameLike = optionals____.nameLike, objectIds = optionals____.objectIds, orderby = optionals____.orderby, padCounts = optionals____.padCounts, parent = optionals____.parent, search = optionals____.search, slug = optionals____.slug, termTaxonomId = optionals____.termTaxonomId, updateTermMetaCache = optionals____.updateTermMetaCache }


type alias PostToCategoryConnectionWhereArgsOptionalFields =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }


{-| Type for the PostToCategoryConnectionWhereArgs input object.
-}
type alias PostToCategoryConnectionWhereArgs =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }
    

{-| Encode a PostToCategoryConnectionWhereArgs into a value that can be used as an argument.
-}
encodePostToCategoryConnectionWhereArgs : PostToCategoryConnectionWhereArgs -> Value
encodePostToCategoryConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "cacheDomain", (Encode.string)  |> Encode.optional input____.cacheDomain ), ( "childOf", (Encode.int)  |> Encode.optional input____.childOf ), ( "childless", (Encode.bool)  |> Encode.optional input____.childless ), ( "descriptionLike", (Encode.string)  |> Encode.optional input____.descriptionLike ), ( "exclude", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.exclude ), ( "excludeTree", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.excludeTree ), ( "hideEmpty", (Encode.bool)  |> Encode.optional input____.hideEmpty ), ( "hierarchical", (Encode.bool)  |> Encode.optional input____.hierarchical ), ( "include", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.include ), ( "name", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.name ), ( "nameLike", (Encode.string)  |> Encode.optional input____.nameLike ), ( "objectIds", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.objectIds ), ( "orderby", ((Encode.enum Taco.Enum.TermObjectsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "padCounts", (Encode.bool)  |> Encode.optional input____.padCounts ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "slug", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.slug ), ( "termTaxonomId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.termTaxonomId ), ( "updateTermMetaCache", (Encode.bool)  |> Encode.optional input____.updateTermMetaCache ) ]


buildPostToCommentConnectionWhereArgs : (PostToCommentConnectionWhereArgsOptionalFields -> PostToCommentConnectionWhereArgsOptionalFields)
 -> PostToCommentConnectionWhereArgs
buildPostToCommentConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorEmail = Absent, authorIn = Absent, authorNotIn = Absent, authorUrl = Absent, commentIn = Absent, commentNotIn = Absent, commentType = Absent, commentTypeIn = Absent, commentTypeNotIn = Absent, contentAuthor = Absent, contentAuthorIn = Absent, contentAuthorNotIn = Absent, contentId = Absent, contentIdIn = Absent, contentIdNotIn = Absent, contentName = Absent, contentParent = Absent, contentStatus = Absent, contentType = Absent, includeUnapproved = Absent, karma = Absent, order = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, search = Absent, status = Absent, userId = Absent }
    in
    { authorEmail = optionals____.authorEmail, authorIn = optionals____.authorIn, authorNotIn = optionals____.authorNotIn, authorUrl = optionals____.authorUrl, commentIn = optionals____.commentIn, commentNotIn = optionals____.commentNotIn, commentType = optionals____.commentType, commentTypeIn = optionals____.commentTypeIn, commentTypeNotIn = optionals____.commentTypeNotIn, contentAuthor = optionals____.contentAuthor, contentAuthorIn = optionals____.contentAuthorIn, contentAuthorNotIn = optionals____.contentAuthorNotIn, contentId = optionals____.contentId, contentIdIn = optionals____.contentIdIn, contentIdNotIn = optionals____.contentIdNotIn, contentName = optionals____.contentName, contentParent = optionals____.contentParent, contentStatus = optionals____.contentStatus, contentType = optionals____.contentType, includeUnapproved = optionals____.includeUnapproved, karma = optionals____.karma, order = optionals____.order, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, search = optionals____.search, status = optionals____.status, userId = optionals____.userId }


type alias PostToCommentConnectionWhereArgsOptionalFields =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the PostToCommentConnectionWhereArgs input object.
-}
type alias PostToCommentConnectionWhereArgs =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a PostToCommentConnectionWhereArgs into a value that can be used as an argument.
-}
encodePostToCommentConnectionWhereArgs : PostToCommentConnectionWhereArgs -> Value
encodePostToCommentConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "authorEmail", (Encode.string)  |> Encode.optional input____.authorEmail ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "authorUrl", (Encode.string)  |> Encode.optional input____.authorUrl ), ( "commentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentIn ), ( "commentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentNotIn ), ( "commentType", (Encode.string)  |> Encode.optional input____.commentType ), ( "commentTypeIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentTypeIn ), ( "commentTypeNotIn", (Encode.string)  |> Encode.optional input____.commentTypeNotIn ), ( "contentAuthor", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthor ), ( "contentAuthorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorIn ), ( "contentAuthorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorNotIn ), ( "contentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.contentId ), ( "contentIdIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdIn ), ( "contentIdNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdNotIn ), ( "contentName", (Encode.string)  |> Encode.optional input____.contentName ), ( "contentParent", (Encode.int)  |> Encode.optional input____.contentParent ), ( "contentStatus", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentStatus ), ( "contentType", ((Encode.enum Taco.Enum.ContentTypeEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentType ), ( "includeUnapproved", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.includeUnapproved ), ( "karma", (Encode.int)  |> Encode.optional input____.karma ), ( "order", ((Encode.enum Taco.Enum.OrderEnum.toString))  |> Encode.optional input____.order ), ( "orderby", ((Encode.enum Taco.Enum.CommentsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "status", (Encode.string)  |> Encode.optional input____.status ), ( "userId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.userId ) ]


buildPostToPostFormatConnectionWhereArgs : (PostToPostFormatConnectionWhereArgsOptionalFields -> PostToPostFormatConnectionWhereArgsOptionalFields)
 -> PostToPostFormatConnectionWhereArgs
buildPostToPostFormatConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { cacheDomain = Absent, childOf = Absent, childless = Absent, descriptionLike = Absent, exclude = Absent, excludeTree = Absent, hideEmpty = Absent, hierarchical = Absent, include = Absent, name = Absent, nameLike = Absent, objectIds = Absent, orderby = Absent, padCounts = Absent, parent = Absent, search = Absent, slug = Absent, termTaxonomId = Absent, updateTermMetaCache = Absent }
    in
    { cacheDomain = optionals____.cacheDomain, childOf = optionals____.childOf, childless = optionals____.childless, descriptionLike = optionals____.descriptionLike, exclude = optionals____.exclude, excludeTree = optionals____.excludeTree, hideEmpty = optionals____.hideEmpty, hierarchical = optionals____.hierarchical, include = optionals____.include, name = optionals____.name, nameLike = optionals____.nameLike, objectIds = optionals____.objectIds, orderby = optionals____.orderby, padCounts = optionals____.padCounts, parent = optionals____.parent, search = optionals____.search, slug = optionals____.slug, termTaxonomId = optionals____.termTaxonomId, updateTermMetaCache = optionals____.updateTermMetaCache }


type alias PostToPostFormatConnectionWhereArgsOptionalFields =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }


{-| Type for the PostToPostFormatConnectionWhereArgs input object.
-}
type alias PostToPostFormatConnectionWhereArgs =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }
    

{-| Encode a PostToPostFormatConnectionWhereArgs into a value that can be used as an argument.
-}
encodePostToPostFormatConnectionWhereArgs : PostToPostFormatConnectionWhereArgs -> Value
encodePostToPostFormatConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "cacheDomain", (Encode.string)  |> Encode.optional input____.cacheDomain ), ( "childOf", (Encode.int)  |> Encode.optional input____.childOf ), ( "childless", (Encode.bool)  |> Encode.optional input____.childless ), ( "descriptionLike", (Encode.string)  |> Encode.optional input____.descriptionLike ), ( "exclude", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.exclude ), ( "excludeTree", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.excludeTree ), ( "hideEmpty", (Encode.bool)  |> Encode.optional input____.hideEmpty ), ( "hierarchical", (Encode.bool)  |> Encode.optional input____.hierarchical ), ( "include", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.include ), ( "name", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.name ), ( "nameLike", (Encode.string)  |> Encode.optional input____.nameLike ), ( "objectIds", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.objectIds ), ( "orderby", ((Encode.enum Taco.Enum.TermObjectsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "padCounts", (Encode.bool)  |> Encode.optional input____.padCounts ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "slug", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.slug ), ( "termTaxonomId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.termTaxonomId ), ( "updateTermMetaCache", (Encode.bool)  |> Encode.optional input____.updateTermMetaCache ) ]


buildPostToRevisionConnectionWhereArgs : (PostToRevisionConnectionWhereArgsOptionalFields -> PostToRevisionConnectionWhereArgsOptionalFields)
 -> PostToRevisionConnectionWhereArgs
buildPostToRevisionConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, categoryId = Absent, categoryIn = Absent, categoryName = Absent, categoryNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, tag = Absent, tagId = Absent, tagIn = Absent, tagNotIn = Absent, tagSlugAnd = Absent, tagSlugIn = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, categoryId = optionals____.categoryId, categoryIn = optionals____.categoryIn, categoryName = optionals____.categoryName, categoryNotIn = optionals____.categoryNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, tag = optionals____.tag, tagId = optionals____.tagId, tagIn = optionals____.tagIn, tagNotIn = optionals____.tagNotIn, tagSlugAnd = optionals____.tagSlugAnd, tagSlugIn = optionals____.tagSlugIn, title = optionals____.title }


type alias PostToRevisionConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }


{-| Type for the PostToRevisionConnectionWhereArgs input object.
-}
type alias PostToRevisionConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }
    

{-| Encode a PostToRevisionConnectionWhereArgs into a value that can be used as an argument.
-}
encodePostToRevisionConnectionWhereArgs : PostToRevisionConnectionWhereArgs -> Value
encodePostToRevisionConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "categoryId", (Encode.int)  |> Encode.optional input____.categoryId ), ( "categoryIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryIn ), ( "categoryName", (Encode.string)  |> Encode.optional input____.categoryName ), ( "categoryNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "tag", (Encode.string)  |> Encode.optional input____.tag ), ( "tagId", (Encode.string)  |> Encode.optional input____.tagId ), ( "tagIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagIn ), ( "tagNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagNotIn ), ( "tagSlugAnd", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugAnd ), ( "tagSlugIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugIn ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildPostToTagConnectionWhereArgs : (PostToTagConnectionWhereArgsOptionalFields -> PostToTagConnectionWhereArgsOptionalFields)
 -> PostToTagConnectionWhereArgs
buildPostToTagConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { cacheDomain = Absent, childOf = Absent, childless = Absent, descriptionLike = Absent, exclude = Absent, excludeTree = Absent, hideEmpty = Absent, hierarchical = Absent, include = Absent, name = Absent, nameLike = Absent, objectIds = Absent, orderby = Absent, padCounts = Absent, parent = Absent, search = Absent, slug = Absent, termTaxonomId = Absent, updateTermMetaCache = Absent }
    in
    { cacheDomain = optionals____.cacheDomain, childOf = optionals____.childOf, childless = optionals____.childless, descriptionLike = optionals____.descriptionLike, exclude = optionals____.exclude, excludeTree = optionals____.excludeTree, hideEmpty = optionals____.hideEmpty, hierarchical = optionals____.hierarchical, include = optionals____.include, name = optionals____.name, nameLike = optionals____.nameLike, objectIds = optionals____.objectIds, orderby = optionals____.orderby, padCounts = optionals____.padCounts, parent = optionals____.parent, search = optionals____.search, slug = optionals____.slug, termTaxonomId = optionals____.termTaxonomId, updateTermMetaCache = optionals____.updateTermMetaCache }


type alias PostToTagConnectionWhereArgsOptionalFields =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }


{-| Type for the PostToTagConnectionWhereArgs input object.
-}
type alias PostToTagConnectionWhereArgs =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }
    

{-| Encode a PostToTagConnectionWhereArgs into a value that can be used as an argument.
-}
encodePostToTagConnectionWhereArgs : PostToTagConnectionWhereArgs -> Value
encodePostToTagConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "cacheDomain", (Encode.string)  |> Encode.optional input____.cacheDomain ), ( "childOf", (Encode.int)  |> Encode.optional input____.childOf ), ( "childless", (Encode.bool)  |> Encode.optional input____.childless ), ( "descriptionLike", (Encode.string)  |> Encode.optional input____.descriptionLike ), ( "exclude", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.exclude ), ( "excludeTree", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.excludeTree ), ( "hideEmpty", (Encode.bool)  |> Encode.optional input____.hideEmpty ), ( "hierarchical", (Encode.bool)  |> Encode.optional input____.hierarchical ), ( "include", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.include ), ( "name", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.name ), ( "nameLike", (Encode.string)  |> Encode.optional input____.nameLike ), ( "objectIds", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.objectIds ), ( "orderby", ((Encode.enum Taco.Enum.TermObjectsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "padCounts", (Encode.bool)  |> Encode.optional input____.padCounts ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "slug", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.slug ), ( "termTaxonomId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.termTaxonomId ), ( "updateTermMetaCache", (Encode.bool)  |> Encode.optional input____.updateTermMetaCache ) ]


buildPostToTermNodeConnectionWhereArgs : (PostToTermNodeConnectionWhereArgsOptionalFields -> PostToTermNodeConnectionWhereArgsOptionalFields)
 -> PostToTermNodeConnectionWhereArgs
buildPostToTermNodeConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { cacheDomain = Absent, childOf = Absent, childless = Absent, descriptionLike = Absent, exclude = Absent, excludeTree = Absent, hideEmpty = Absent, hierarchical = Absent, include = Absent, name = Absent, nameLike = Absent, objectIds = Absent, orderby = Absent, padCounts = Absent, parent = Absent, search = Absent, slug = Absent, taxonomies = Absent, termTaxonomId = Absent, updateTermMetaCache = Absent }
    in
    { cacheDomain = optionals____.cacheDomain, childOf = optionals____.childOf, childless = optionals____.childless, descriptionLike = optionals____.descriptionLike, exclude = optionals____.exclude, excludeTree = optionals____.excludeTree, hideEmpty = optionals____.hideEmpty, hierarchical = optionals____.hierarchical, include = optionals____.include, name = optionals____.name, nameLike = optionals____.nameLike, objectIds = optionals____.objectIds, orderby = optionals____.orderby, padCounts = optionals____.padCounts, parent = optionals____.parent, search = optionals____.search, slug = optionals____.slug, taxonomies = optionals____.taxonomies, termTaxonomId = optionals____.termTaxonomId, updateTermMetaCache = optionals____.updateTermMetaCache }


type alias PostToTermNodeConnectionWhereArgsOptionalFields =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , taxonomies : (OptionalArgument (List (Maybe Taco.Enum.TaxonomyEnum.TaxonomyEnum)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }


{-| Type for the PostToTermNodeConnectionWhereArgs input object.
-}
type alias PostToTermNodeConnectionWhereArgs =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , taxonomies : (OptionalArgument (List (Maybe Taco.Enum.TaxonomyEnum.TaxonomyEnum)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }
    

{-| Encode a PostToTermNodeConnectionWhereArgs into a value that can be used as an argument.
-}
encodePostToTermNodeConnectionWhereArgs : PostToTermNodeConnectionWhereArgs -> Value
encodePostToTermNodeConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "cacheDomain", (Encode.string)  |> Encode.optional input____.cacheDomain ), ( "childOf", (Encode.int)  |> Encode.optional input____.childOf ), ( "childless", (Encode.bool)  |> Encode.optional input____.childless ), ( "descriptionLike", (Encode.string)  |> Encode.optional input____.descriptionLike ), ( "exclude", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.exclude ), ( "excludeTree", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.excludeTree ), ( "hideEmpty", (Encode.bool)  |> Encode.optional input____.hideEmpty ), ( "hierarchical", (Encode.bool)  |> Encode.optional input____.hierarchical ), ( "include", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.include ), ( "name", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.name ), ( "nameLike", (Encode.string)  |> Encode.optional input____.nameLike ), ( "objectIds", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.objectIds ), ( "orderby", ((Encode.enum Taco.Enum.TermObjectsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "padCounts", (Encode.bool)  |> Encode.optional input____.padCounts ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "slug", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.slug ), ( "taxonomies", ((Encode.enum Taco.Enum.TaxonomyEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.taxonomies ), ( "termTaxonomId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.termTaxonomId ), ( "updateTermMetaCache", (Encode.bool)  |> Encode.optional input____.updateTermMetaCache ) ]


buildRegisterUserInput : RegisterUserInputRequiredFields
 -> (RegisterUserInputOptionalFields -> RegisterUserInputOptionalFields)
 -> RegisterUserInput
buildRegisterUserInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { aim = Absent, clientMutationId = Absent, description = Absent, displayName = Absent, email = Absent, firstName = Absent, jabber = Absent, lastName = Absent, locale = Absent, nicename = Absent, nickname = Absent, password = Absent, registered = Absent, richEditing = Absent, websiteUrl = Absent, yim = Absent }
    in
    { aim = optionals____.aim, clientMutationId = optionals____.clientMutationId, description = optionals____.description, displayName = optionals____.displayName, email = optionals____.email, firstName = optionals____.firstName, jabber = optionals____.jabber, lastName = optionals____.lastName, locale = optionals____.locale, nicename = optionals____.nicename, nickname = optionals____.nickname, password = optionals____.password, registered = optionals____.registered, richEditing = optionals____.richEditing, username = required____.username, websiteUrl = optionals____.websiteUrl, yim = optionals____.yim }

type alias RegisterUserInputRequiredFields =
    { username : String }
type alias RegisterUserInputOptionalFields =
    { aim : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , displayName : (OptionalArgument String)
 , email : (OptionalArgument String)
 , firstName : (OptionalArgument String)
 , jabber : (OptionalArgument String)
 , lastName : (OptionalArgument String)
 , locale : (OptionalArgument String)
 , nicename : (OptionalArgument String)
 , nickname : (OptionalArgument String)
 , password : (OptionalArgument String)
 , registered : (OptionalArgument String)
 , richEditing : (OptionalArgument String)
 , websiteUrl : (OptionalArgument String)
 , yim : (OptionalArgument String) }


{-| Type for the RegisterUserInput input object.
-}
type alias RegisterUserInput =
    { aim : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , displayName : (OptionalArgument String)
 , email : (OptionalArgument String)
 , firstName : (OptionalArgument String)
 , jabber : (OptionalArgument String)
 , lastName : (OptionalArgument String)
 , locale : (OptionalArgument String)
 , nicename : (OptionalArgument String)
 , nickname : (OptionalArgument String)
 , password : (OptionalArgument String)
 , registered : (OptionalArgument String)
 , richEditing : (OptionalArgument String)
 , username : String
 , websiteUrl : (OptionalArgument String)
 , yim : (OptionalArgument String) }
    

{-| Encode a RegisterUserInput into a value that can be used as an argument.
-}
encodeRegisterUserInput : RegisterUserInput -> Value
encodeRegisterUserInput input____ =
    Encode.maybeObject
        [ ( "aim", (Encode.string)  |> Encode.optional input____.aim ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "displayName", (Encode.string)  |> Encode.optional input____.displayName ), ( "email", (Encode.string)  |> Encode.optional input____.email ), ( "firstName", (Encode.string)  |> Encode.optional input____.firstName ), ( "jabber", (Encode.string)  |> Encode.optional input____.jabber ), ( "lastName", (Encode.string)  |> Encode.optional input____.lastName ), ( "locale", (Encode.string)  |> Encode.optional input____.locale ), ( "nicename", (Encode.string)  |> Encode.optional input____.nicename ), ( "nickname", (Encode.string)  |> Encode.optional input____.nickname ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "registered", (Encode.string)  |> Encode.optional input____.registered ), ( "richEditing", (Encode.string)  |> Encode.optional input____.richEditing ), ( "username", (Encode.string)  input____.username |> Just ), ( "websiteUrl", (Encode.string)  |> Encode.optional input____.websiteUrl ), ( "yim", (Encode.string)  |> Encode.optional input____.yim ) ]


buildResetUserPasswordInput : (ResetUserPasswordInputOptionalFields -> ResetUserPasswordInputOptionalFields)
 -> ResetUserPasswordInput
buildResetUserPasswordInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent, key = Absent, login = Absent, password = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, key = optionals____.key, login = optionals____.login, password = optionals____.password }


type alias ResetUserPasswordInputOptionalFields =
    { clientMutationId : (OptionalArgument String)
 , key : (OptionalArgument String)
 , login : (OptionalArgument String)
 , password : (OptionalArgument String) }


{-| Type for the ResetUserPasswordInput input object.
-}
type alias ResetUserPasswordInput =
    { clientMutationId : (OptionalArgument String)
 , key : (OptionalArgument String)
 , login : (OptionalArgument String)
 , password : (OptionalArgument String) }
    

{-| Encode a ResetUserPasswordInput into a value that can be used as an argument.
-}
encodeResetUserPasswordInput : ResetUserPasswordInput -> Value
encodeResetUserPasswordInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "key", (Encode.string)  |> Encode.optional input____.key ), ( "login", (Encode.string)  |> Encode.optional input____.login ), ( "password", (Encode.string)  |> Encode.optional input____.password ) ]


buildRestoreCommentInput : RestoreCommentInputRequiredFields
 -> (RestoreCommentInputOptionalFields -> RestoreCommentInputOptionalFields)
 -> RestoreCommentInput
buildRestoreCommentInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, id = required____.id }

type alias RestoreCommentInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias RestoreCommentInputOptionalFields =
    { clientMutationId : (OptionalArgument String) }


{-| Type for the RestoreCommentInput input object.
-}
type alias RestoreCommentInput =
    { clientMutationId : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id }
    

{-| Encode a RestoreCommentInput into a value that can be used as an argument.
-}
encodeRestoreCommentInput : RestoreCommentInput -> Value
encodeRestoreCommentInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ) ]


buildRootQueryToCategoryConnectionWhereArgs : (RootQueryToCategoryConnectionWhereArgsOptionalFields -> RootQueryToCategoryConnectionWhereArgsOptionalFields)
 -> RootQueryToCategoryConnectionWhereArgs
buildRootQueryToCategoryConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { cacheDomain = Absent, childOf = Absent, childless = Absent, descriptionLike = Absent, exclude = Absent, excludeTree = Absent, hideEmpty = Absent, hierarchical = Absent, include = Absent, name = Absent, nameLike = Absent, objectIds = Absent, orderby = Absent, padCounts = Absent, parent = Absent, search = Absent, slug = Absent, termTaxonomId = Absent, updateTermMetaCache = Absent }
    in
    { cacheDomain = optionals____.cacheDomain, childOf = optionals____.childOf, childless = optionals____.childless, descriptionLike = optionals____.descriptionLike, exclude = optionals____.exclude, excludeTree = optionals____.excludeTree, hideEmpty = optionals____.hideEmpty, hierarchical = optionals____.hierarchical, include = optionals____.include, name = optionals____.name, nameLike = optionals____.nameLike, objectIds = optionals____.objectIds, orderby = optionals____.orderby, padCounts = optionals____.padCounts, parent = optionals____.parent, search = optionals____.search, slug = optionals____.slug, termTaxonomId = optionals____.termTaxonomId, updateTermMetaCache = optionals____.updateTermMetaCache }


type alias RootQueryToCategoryConnectionWhereArgsOptionalFields =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }


{-| Type for the RootQueryToCategoryConnectionWhereArgs input object.
-}
type alias RootQueryToCategoryConnectionWhereArgs =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }
    

{-| Encode a RootQueryToCategoryConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToCategoryConnectionWhereArgs : RootQueryToCategoryConnectionWhereArgs -> Value
encodeRootQueryToCategoryConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "cacheDomain", (Encode.string)  |> Encode.optional input____.cacheDomain ), ( "childOf", (Encode.int)  |> Encode.optional input____.childOf ), ( "childless", (Encode.bool)  |> Encode.optional input____.childless ), ( "descriptionLike", (Encode.string)  |> Encode.optional input____.descriptionLike ), ( "exclude", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.exclude ), ( "excludeTree", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.excludeTree ), ( "hideEmpty", (Encode.bool)  |> Encode.optional input____.hideEmpty ), ( "hierarchical", (Encode.bool)  |> Encode.optional input____.hierarchical ), ( "include", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.include ), ( "name", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.name ), ( "nameLike", (Encode.string)  |> Encode.optional input____.nameLike ), ( "objectIds", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.objectIds ), ( "orderby", ((Encode.enum Taco.Enum.TermObjectsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "padCounts", (Encode.bool)  |> Encode.optional input____.padCounts ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "slug", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.slug ), ( "termTaxonomId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.termTaxonomId ), ( "updateTermMetaCache", (Encode.bool)  |> Encode.optional input____.updateTermMetaCache ) ]


buildRootQueryToCommentConnectionWhereArgs : (RootQueryToCommentConnectionWhereArgsOptionalFields -> RootQueryToCommentConnectionWhereArgsOptionalFields)
 -> RootQueryToCommentConnectionWhereArgs
buildRootQueryToCommentConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorEmail = Absent, authorIn = Absent, authorNotIn = Absent, authorUrl = Absent, commentIn = Absent, commentNotIn = Absent, commentType = Absent, commentTypeIn = Absent, commentTypeNotIn = Absent, contentAuthor = Absent, contentAuthorIn = Absent, contentAuthorNotIn = Absent, contentId = Absent, contentIdIn = Absent, contentIdNotIn = Absent, contentName = Absent, contentParent = Absent, contentStatus = Absent, contentType = Absent, includeUnapproved = Absent, karma = Absent, order = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, search = Absent, status = Absent, userId = Absent }
    in
    { authorEmail = optionals____.authorEmail, authorIn = optionals____.authorIn, authorNotIn = optionals____.authorNotIn, authorUrl = optionals____.authorUrl, commentIn = optionals____.commentIn, commentNotIn = optionals____.commentNotIn, commentType = optionals____.commentType, commentTypeIn = optionals____.commentTypeIn, commentTypeNotIn = optionals____.commentTypeNotIn, contentAuthor = optionals____.contentAuthor, contentAuthorIn = optionals____.contentAuthorIn, contentAuthorNotIn = optionals____.contentAuthorNotIn, contentId = optionals____.contentId, contentIdIn = optionals____.contentIdIn, contentIdNotIn = optionals____.contentIdNotIn, contentName = optionals____.contentName, contentParent = optionals____.contentParent, contentStatus = optionals____.contentStatus, contentType = optionals____.contentType, includeUnapproved = optionals____.includeUnapproved, karma = optionals____.karma, order = optionals____.order, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, search = optionals____.search, status = optionals____.status, userId = optionals____.userId }


type alias RootQueryToCommentConnectionWhereArgsOptionalFields =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the RootQueryToCommentConnectionWhereArgs input object.
-}
type alias RootQueryToCommentConnectionWhereArgs =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a RootQueryToCommentConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToCommentConnectionWhereArgs : RootQueryToCommentConnectionWhereArgs -> Value
encodeRootQueryToCommentConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "authorEmail", (Encode.string)  |> Encode.optional input____.authorEmail ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "authorUrl", (Encode.string)  |> Encode.optional input____.authorUrl ), ( "commentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentIn ), ( "commentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentNotIn ), ( "commentType", (Encode.string)  |> Encode.optional input____.commentType ), ( "commentTypeIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentTypeIn ), ( "commentTypeNotIn", (Encode.string)  |> Encode.optional input____.commentTypeNotIn ), ( "contentAuthor", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthor ), ( "contentAuthorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorIn ), ( "contentAuthorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorNotIn ), ( "contentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.contentId ), ( "contentIdIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdIn ), ( "contentIdNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdNotIn ), ( "contentName", (Encode.string)  |> Encode.optional input____.contentName ), ( "contentParent", (Encode.int)  |> Encode.optional input____.contentParent ), ( "contentStatus", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentStatus ), ( "contentType", ((Encode.enum Taco.Enum.ContentTypeEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentType ), ( "includeUnapproved", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.includeUnapproved ), ( "karma", (Encode.int)  |> Encode.optional input____.karma ), ( "order", ((Encode.enum Taco.Enum.OrderEnum.toString))  |> Encode.optional input____.order ), ( "orderby", ((Encode.enum Taco.Enum.CommentsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "status", (Encode.string)  |> Encode.optional input____.status ), ( "userId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.userId ) ]


buildRootQueryToContentNodeConnectionWhereArgs : (RootQueryToContentNodeConnectionWhereArgsOptionalFields -> RootQueryToContentNodeConnectionWhereArgsOptionalFields)
 -> RootQueryToContentNodeConnectionWhereArgs
buildRootQueryToContentNodeConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { contentTypes = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { contentTypes = optionals____.contentTypes, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias RootQueryToContentNodeConnectionWhereArgsOptionalFields =
    { contentTypes : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the RootQueryToContentNodeConnectionWhereArgs input object.
-}
type alias RootQueryToContentNodeConnectionWhereArgs =
    { contentTypes : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a RootQueryToContentNodeConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToContentNodeConnectionWhereArgs : RootQueryToContentNodeConnectionWhereArgs -> Value
encodeRootQueryToContentNodeConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "contentTypes", ((Encode.enum Taco.Enum.ContentTypeEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentTypes ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildRootQueryToContentRevisionUnionConnectionWhereArgs : (RootQueryToContentRevisionUnionConnectionWhereArgsOptionalFields -> RootQueryToContentRevisionUnionConnectionWhereArgsOptionalFields)
 -> RootQueryToContentRevisionUnionConnectionWhereArgs
buildRootQueryToContentRevisionUnionConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias RootQueryToContentRevisionUnionConnectionWhereArgsOptionalFields =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the RootQueryToContentRevisionUnionConnectionWhereArgs input object.
-}
type alias RootQueryToContentRevisionUnionConnectionWhereArgs =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a RootQueryToContentRevisionUnionConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToContentRevisionUnionConnectionWhereArgs : RootQueryToContentRevisionUnionConnectionWhereArgs -> Value
encodeRootQueryToContentRevisionUnionConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildRootQueryToMediaItemConnectionWhereArgs : (RootQueryToMediaItemConnectionWhereArgsOptionalFields -> RootQueryToMediaItemConnectionWhereArgsOptionalFields)
 -> RootQueryToMediaItemConnectionWhereArgs
buildRootQueryToMediaItemConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias RootQueryToMediaItemConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the RootQueryToMediaItemConnectionWhereArgs input object.
-}
type alias RootQueryToMediaItemConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a RootQueryToMediaItemConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToMediaItemConnectionWhereArgs : RootQueryToMediaItemConnectionWhereArgs -> Value
encodeRootQueryToMediaItemConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildRootQueryToMenuConnectionWhereArgs : (RootQueryToMenuConnectionWhereArgsOptionalFields -> RootQueryToMenuConnectionWhereArgsOptionalFields)
 -> RootQueryToMenuConnectionWhereArgs
buildRootQueryToMenuConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { id = Absent, location = Absent, slug = Absent }
    in
    { id = optionals____.id, location = optionals____.location, slug = optionals____.slug }


type alias RootQueryToMenuConnectionWhereArgsOptionalFields =
    { id : (OptionalArgument Int)
 , location : (OptionalArgument Taco.Enum.MenuLocationEnum.MenuLocationEnum)
 , slug : (OptionalArgument String) }


{-| Type for the RootQueryToMenuConnectionWhereArgs input object.
-}
type alias RootQueryToMenuConnectionWhereArgs =
    { id : (OptionalArgument Int)
 , location : (OptionalArgument Taco.Enum.MenuLocationEnum.MenuLocationEnum)
 , slug : (OptionalArgument String) }
    

{-| Encode a RootQueryToMenuConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToMenuConnectionWhereArgs : RootQueryToMenuConnectionWhereArgs -> Value
encodeRootQueryToMenuConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "location", ((Encode.enum Taco.Enum.MenuLocationEnum.toString))  |> Encode.optional input____.location ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ) ]


buildRootQueryToMenuItemConnectionWhereArgs : (RootQueryToMenuItemConnectionWhereArgsOptionalFields -> RootQueryToMenuItemConnectionWhereArgsOptionalFields)
 -> RootQueryToMenuItemConnectionWhereArgs
buildRootQueryToMenuItemConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { id = Absent, location = Absent, parentDatabaseId = Absent, parentId = Absent }
    in
    { id = optionals____.id, location = optionals____.location, parentDatabaseId = optionals____.parentDatabaseId, parentId = optionals____.parentId }


type alias RootQueryToMenuItemConnectionWhereArgsOptionalFields =
    { id : (OptionalArgument Int)
 , location : (OptionalArgument Taco.Enum.MenuLocationEnum.MenuLocationEnum)
 , parentDatabaseId : (OptionalArgument Int)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the RootQueryToMenuItemConnectionWhereArgs input object.
-}
type alias RootQueryToMenuItemConnectionWhereArgs =
    { id : (OptionalArgument Int)
 , location : (OptionalArgument Taco.Enum.MenuLocationEnum.MenuLocationEnum)
 , parentDatabaseId : (OptionalArgument Int)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a RootQueryToMenuItemConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToMenuItemConnectionWhereArgs : RootQueryToMenuItemConnectionWhereArgs -> Value
encodeRootQueryToMenuItemConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "location", ((Encode.enum Taco.Enum.MenuLocationEnum.toString))  |> Encode.optional input____.location ), ( "parentDatabaseId", (Encode.int)  |> Encode.optional input____.parentDatabaseId ), ( "parentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parentId ) ]


buildRootQueryToPageConnectionWhereArgs : (RootQueryToPageConnectionWhereArgsOptionalFields -> RootQueryToPageConnectionWhereArgsOptionalFields)
 -> RootQueryToPageConnectionWhereArgs
buildRootQueryToPageConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias RootQueryToPageConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the RootQueryToPageConnectionWhereArgs input object.
-}
type alias RootQueryToPageConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a RootQueryToPageConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToPageConnectionWhereArgs : RootQueryToPageConnectionWhereArgs -> Value
encodeRootQueryToPageConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildRootQueryToPostConnectionWhereArgs : (RootQueryToPostConnectionWhereArgsOptionalFields -> RootQueryToPostConnectionWhereArgsOptionalFields)
 -> RootQueryToPostConnectionWhereArgs
buildRootQueryToPostConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, categoryId = Absent, categoryIn = Absent, categoryName = Absent, categoryNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, tag = Absent, tagId = Absent, tagIn = Absent, tagNotIn = Absent, tagSlugAnd = Absent, tagSlugIn = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, categoryId = optionals____.categoryId, categoryIn = optionals____.categoryIn, categoryName = optionals____.categoryName, categoryNotIn = optionals____.categoryNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, tag = optionals____.tag, tagId = optionals____.tagId, tagIn = optionals____.tagIn, tagNotIn = optionals____.tagNotIn, tagSlugAnd = optionals____.tagSlugAnd, tagSlugIn = optionals____.tagSlugIn, title = optionals____.title }


type alias RootQueryToPostConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }


{-| Type for the RootQueryToPostConnectionWhereArgs input object.
-}
type alias RootQueryToPostConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }
    

{-| Encode a RootQueryToPostConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToPostConnectionWhereArgs : RootQueryToPostConnectionWhereArgs -> Value
encodeRootQueryToPostConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "categoryId", (Encode.int)  |> Encode.optional input____.categoryId ), ( "categoryIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryIn ), ( "categoryName", (Encode.string)  |> Encode.optional input____.categoryName ), ( "categoryNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "tag", (Encode.string)  |> Encode.optional input____.tag ), ( "tagId", (Encode.string)  |> Encode.optional input____.tagId ), ( "tagIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagIn ), ( "tagNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagNotIn ), ( "tagSlugAnd", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugAnd ), ( "tagSlugIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugIn ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildRootQueryToPostFormatConnectionWhereArgs : (RootQueryToPostFormatConnectionWhereArgsOptionalFields -> RootQueryToPostFormatConnectionWhereArgsOptionalFields)
 -> RootQueryToPostFormatConnectionWhereArgs
buildRootQueryToPostFormatConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { cacheDomain = Absent, childOf = Absent, childless = Absent, descriptionLike = Absent, exclude = Absent, excludeTree = Absent, hideEmpty = Absent, hierarchical = Absent, include = Absent, name = Absent, nameLike = Absent, objectIds = Absent, orderby = Absent, padCounts = Absent, parent = Absent, search = Absent, slug = Absent, termTaxonomId = Absent, updateTermMetaCache = Absent }
    in
    { cacheDomain = optionals____.cacheDomain, childOf = optionals____.childOf, childless = optionals____.childless, descriptionLike = optionals____.descriptionLike, exclude = optionals____.exclude, excludeTree = optionals____.excludeTree, hideEmpty = optionals____.hideEmpty, hierarchical = optionals____.hierarchical, include = optionals____.include, name = optionals____.name, nameLike = optionals____.nameLike, objectIds = optionals____.objectIds, orderby = optionals____.orderby, padCounts = optionals____.padCounts, parent = optionals____.parent, search = optionals____.search, slug = optionals____.slug, termTaxonomId = optionals____.termTaxonomId, updateTermMetaCache = optionals____.updateTermMetaCache }


type alias RootQueryToPostFormatConnectionWhereArgsOptionalFields =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }


{-| Type for the RootQueryToPostFormatConnectionWhereArgs input object.
-}
type alias RootQueryToPostFormatConnectionWhereArgs =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }
    

{-| Encode a RootQueryToPostFormatConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToPostFormatConnectionWhereArgs : RootQueryToPostFormatConnectionWhereArgs -> Value
encodeRootQueryToPostFormatConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "cacheDomain", (Encode.string)  |> Encode.optional input____.cacheDomain ), ( "childOf", (Encode.int)  |> Encode.optional input____.childOf ), ( "childless", (Encode.bool)  |> Encode.optional input____.childless ), ( "descriptionLike", (Encode.string)  |> Encode.optional input____.descriptionLike ), ( "exclude", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.exclude ), ( "excludeTree", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.excludeTree ), ( "hideEmpty", (Encode.bool)  |> Encode.optional input____.hideEmpty ), ( "hierarchical", (Encode.bool)  |> Encode.optional input____.hierarchical ), ( "include", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.include ), ( "name", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.name ), ( "nameLike", (Encode.string)  |> Encode.optional input____.nameLike ), ( "objectIds", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.objectIds ), ( "orderby", ((Encode.enum Taco.Enum.TermObjectsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "padCounts", (Encode.bool)  |> Encode.optional input____.padCounts ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "slug", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.slug ), ( "termTaxonomId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.termTaxonomId ), ( "updateTermMetaCache", (Encode.bool)  |> Encode.optional input____.updateTermMetaCache ) ]


buildRootQueryToTagConnectionWhereArgs : (RootQueryToTagConnectionWhereArgsOptionalFields -> RootQueryToTagConnectionWhereArgsOptionalFields)
 -> RootQueryToTagConnectionWhereArgs
buildRootQueryToTagConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { cacheDomain = Absent, childOf = Absent, childless = Absent, descriptionLike = Absent, exclude = Absent, excludeTree = Absent, hideEmpty = Absent, hierarchical = Absent, include = Absent, name = Absent, nameLike = Absent, objectIds = Absent, orderby = Absent, padCounts = Absent, parent = Absent, search = Absent, slug = Absent, termTaxonomId = Absent, updateTermMetaCache = Absent }
    in
    { cacheDomain = optionals____.cacheDomain, childOf = optionals____.childOf, childless = optionals____.childless, descriptionLike = optionals____.descriptionLike, exclude = optionals____.exclude, excludeTree = optionals____.excludeTree, hideEmpty = optionals____.hideEmpty, hierarchical = optionals____.hierarchical, include = optionals____.include, name = optionals____.name, nameLike = optionals____.nameLike, objectIds = optionals____.objectIds, orderby = optionals____.orderby, padCounts = optionals____.padCounts, parent = optionals____.parent, search = optionals____.search, slug = optionals____.slug, termTaxonomId = optionals____.termTaxonomId, updateTermMetaCache = optionals____.updateTermMetaCache }


type alias RootQueryToTagConnectionWhereArgsOptionalFields =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }


{-| Type for the RootQueryToTagConnectionWhereArgs input object.
-}
type alias RootQueryToTagConnectionWhereArgs =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }
    

{-| Encode a RootQueryToTagConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToTagConnectionWhereArgs : RootQueryToTagConnectionWhereArgs -> Value
encodeRootQueryToTagConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "cacheDomain", (Encode.string)  |> Encode.optional input____.cacheDomain ), ( "childOf", (Encode.int)  |> Encode.optional input____.childOf ), ( "childless", (Encode.bool)  |> Encode.optional input____.childless ), ( "descriptionLike", (Encode.string)  |> Encode.optional input____.descriptionLike ), ( "exclude", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.exclude ), ( "excludeTree", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.excludeTree ), ( "hideEmpty", (Encode.bool)  |> Encode.optional input____.hideEmpty ), ( "hierarchical", (Encode.bool)  |> Encode.optional input____.hierarchical ), ( "include", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.include ), ( "name", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.name ), ( "nameLike", (Encode.string)  |> Encode.optional input____.nameLike ), ( "objectIds", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.objectIds ), ( "orderby", ((Encode.enum Taco.Enum.TermObjectsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "padCounts", (Encode.bool)  |> Encode.optional input____.padCounts ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "slug", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.slug ), ( "termTaxonomId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.termTaxonomId ), ( "updateTermMetaCache", (Encode.bool)  |> Encode.optional input____.updateTermMetaCache ) ]


buildRootQueryToTermNodeConnectionWhereArgs : (RootQueryToTermNodeConnectionWhereArgsOptionalFields -> RootQueryToTermNodeConnectionWhereArgsOptionalFields)
 -> RootQueryToTermNodeConnectionWhereArgs
buildRootQueryToTermNodeConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { cacheDomain = Absent, childOf = Absent, childless = Absent, descriptionLike = Absent, exclude = Absent, excludeTree = Absent, hideEmpty = Absent, hierarchical = Absent, include = Absent, name = Absent, nameLike = Absent, objectIds = Absent, orderby = Absent, padCounts = Absent, parent = Absent, search = Absent, slug = Absent, taxonomies = Absent, termTaxonomId = Absent, updateTermMetaCache = Absent }
    in
    { cacheDomain = optionals____.cacheDomain, childOf = optionals____.childOf, childless = optionals____.childless, descriptionLike = optionals____.descriptionLike, exclude = optionals____.exclude, excludeTree = optionals____.excludeTree, hideEmpty = optionals____.hideEmpty, hierarchical = optionals____.hierarchical, include = optionals____.include, name = optionals____.name, nameLike = optionals____.nameLike, objectIds = optionals____.objectIds, orderby = optionals____.orderby, padCounts = optionals____.padCounts, parent = optionals____.parent, search = optionals____.search, slug = optionals____.slug, taxonomies = optionals____.taxonomies, termTaxonomId = optionals____.termTaxonomId, updateTermMetaCache = optionals____.updateTermMetaCache }


type alias RootQueryToTermNodeConnectionWhereArgsOptionalFields =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , taxonomies : (OptionalArgument (List (Maybe Taco.Enum.TaxonomyEnum.TaxonomyEnum)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }


{-| Type for the RootQueryToTermNodeConnectionWhereArgs input object.
-}
type alias RootQueryToTermNodeConnectionWhereArgs =
    { cacheDomain : (OptionalArgument String)
 , childOf : (OptionalArgument Int)
 , childless : (OptionalArgument Bool)
 , descriptionLike : (OptionalArgument String)
 , exclude : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , excludeTree : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , hideEmpty : (OptionalArgument Bool)
 , hierarchical : (OptionalArgument Bool)
 , include : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , name : (OptionalArgument (List (Maybe String)))
 , nameLike : (OptionalArgument String)
 , objectIds : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument Taco.Enum.TermObjectsConnectionOrderbyEnum.TermObjectsConnectionOrderbyEnum)
 , padCounts : (OptionalArgument Bool)
 , parent : (OptionalArgument Int)
 , search : (OptionalArgument String)
 , slug : (OptionalArgument (List (Maybe String)))
 , taxonomies : (OptionalArgument (List (Maybe Taco.Enum.TaxonomyEnum.TaxonomyEnum)))
 , termTaxonomId : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , updateTermMetaCache : (OptionalArgument Bool) }
    

{-| Encode a RootQueryToTermNodeConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToTermNodeConnectionWhereArgs : RootQueryToTermNodeConnectionWhereArgs -> Value
encodeRootQueryToTermNodeConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "cacheDomain", (Encode.string)  |> Encode.optional input____.cacheDomain ), ( "childOf", (Encode.int)  |> Encode.optional input____.childOf ), ( "childless", (Encode.bool)  |> Encode.optional input____.childless ), ( "descriptionLike", (Encode.string)  |> Encode.optional input____.descriptionLike ), ( "exclude", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.exclude ), ( "excludeTree", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.excludeTree ), ( "hideEmpty", (Encode.bool)  |> Encode.optional input____.hideEmpty ), ( "hierarchical", (Encode.bool)  |> Encode.optional input____.hierarchical ), ( "include", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.include ), ( "name", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.name ), ( "nameLike", (Encode.string)  |> Encode.optional input____.nameLike ), ( "objectIds", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.objectIds ), ( "orderby", ((Encode.enum Taco.Enum.TermObjectsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "padCounts", (Encode.bool)  |> Encode.optional input____.padCounts ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "slug", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.slug ), ( "taxonomies", ((Encode.enum Taco.Enum.TaxonomyEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.taxonomies ), ( "termTaxonomId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.termTaxonomId ), ( "updateTermMetaCache", (Encode.bool)  |> Encode.optional input____.updateTermMetaCache ) ]


buildRootQueryToUserConnectionWhereArgs : (RootQueryToUserConnectionWhereArgsOptionalFields -> RootQueryToUserConnectionWhereArgsOptionalFields)
 -> RootQueryToUserConnectionWhereArgs
buildRootQueryToUserConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { exclude = Absent, hasPublishedPosts = Absent, include = Absent, login = Absent, loginIn = Absent, loginNotIn = Absent, nicename = Absent, nicenameIn = Absent, nicenameNotIn = Absent, orderby = Absent, role = Absent, roleIn = Absent, roleNotIn = Absent, search = Absent, searchColumns = Absent }
    in
    { exclude = optionals____.exclude, hasPublishedPosts = optionals____.hasPublishedPosts, include = optionals____.include, login = optionals____.login, loginIn = optionals____.loginIn, loginNotIn = optionals____.loginNotIn, nicename = optionals____.nicename, nicenameIn = optionals____.nicenameIn, nicenameNotIn = optionals____.nicenameNotIn, orderby = optionals____.orderby, role = optionals____.role, roleIn = optionals____.roleIn, roleNotIn = optionals____.roleNotIn, search = optionals____.search, searchColumns = optionals____.searchColumns }


type alias RootQueryToUserConnectionWhereArgsOptionalFields =
    { exclude : (OptionalArgument (List (Maybe Int)))
 , hasPublishedPosts : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , include : (OptionalArgument (List (Maybe Int)))
 , login : (OptionalArgument String)
 , loginIn : (OptionalArgument (List (Maybe String)))
 , loginNotIn : (OptionalArgument (List (Maybe String)))
 , nicename : (OptionalArgument String)
 , nicenameIn : (OptionalArgument (List (Maybe String)))
 , nicenameNotIn : (OptionalArgument (List (Maybe String)))
 , orderby : (OptionalArgument (List (Maybe UsersConnectionOrderbyInput)))
 , role : (OptionalArgument Taco.Enum.UserRoleEnum.UserRoleEnum)
 , roleIn : (OptionalArgument (List (Maybe Taco.Enum.UserRoleEnum.UserRoleEnum)))
 , roleNotIn : (OptionalArgument (List (Maybe Taco.Enum.UserRoleEnum.UserRoleEnum)))
 , search : (OptionalArgument String)
 , searchColumns : (OptionalArgument (List (Maybe Taco.Enum.UsersConnectionSearchColumnEnum.UsersConnectionSearchColumnEnum))) }


{-| Type for the RootQueryToUserConnectionWhereArgs input object.
-}
type alias RootQueryToUserConnectionWhereArgs =
    { exclude : (OptionalArgument (List (Maybe Int)))
 , hasPublishedPosts : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , include : (OptionalArgument (List (Maybe Int)))
 , login : (OptionalArgument String)
 , loginIn : (OptionalArgument (List (Maybe String)))
 , loginNotIn : (OptionalArgument (List (Maybe String)))
 , nicename : (OptionalArgument String)
 , nicenameIn : (OptionalArgument (List (Maybe String)))
 , nicenameNotIn : (OptionalArgument (List (Maybe String)))
 , orderby : (OptionalArgument (List (Maybe UsersConnectionOrderbyInput)))
 , role : (OptionalArgument Taco.Enum.UserRoleEnum.UserRoleEnum)
 , roleIn : (OptionalArgument (List (Maybe Taco.Enum.UserRoleEnum.UserRoleEnum)))
 , roleNotIn : (OptionalArgument (List (Maybe Taco.Enum.UserRoleEnum.UserRoleEnum)))
 , search : (OptionalArgument String)
 , searchColumns : (OptionalArgument (List (Maybe Taco.Enum.UsersConnectionSearchColumnEnum.UsersConnectionSearchColumnEnum))) }
    

{-| Encode a RootQueryToUserConnectionWhereArgs into a value that can be used as an argument.
-}
encodeRootQueryToUserConnectionWhereArgs : RootQueryToUserConnectionWhereArgs -> Value
encodeRootQueryToUserConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "exclude", (Encode.int |> Encode.maybe |> Encode.list)  |> Encode.optional input____.exclude ), ( "hasPublishedPosts", ((Encode.enum Taco.Enum.ContentTypeEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.hasPublishedPosts ), ( "include", (Encode.int |> Encode.maybe |> Encode.list)  |> Encode.optional input____.include ), ( "login", (Encode.string)  |> Encode.optional input____.login ), ( "loginIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.loginIn ), ( "loginNotIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.loginNotIn ), ( "nicename", (Encode.string)  |> Encode.optional input____.nicename ), ( "nicenameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nicenameIn ), ( "nicenameNotIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nicenameNotIn ), ( "orderby", (encodeUsersConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "role", ((Encode.enum Taco.Enum.UserRoleEnum.toString))  |> Encode.optional input____.role ), ( "roleIn", ((Encode.enum Taco.Enum.UserRoleEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.roleIn ), ( "roleNotIn", ((Encode.enum Taco.Enum.UserRoleEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.roleNotIn ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "searchColumns", ((Encode.enum Taco.Enum.UsersConnectionSearchColumnEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.searchColumns ) ]


buildSendPasswordResetEmailInput : SendPasswordResetEmailInputRequiredFields
 -> (SendPasswordResetEmailInputOptionalFields -> SendPasswordResetEmailInputOptionalFields)
 -> SendPasswordResetEmailInput
buildSendPasswordResetEmailInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, username = required____.username }

type alias SendPasswordResetEmailInputRequiredFields =
    { username : String }
type alias SendPasswordResetEmailInputOptionalFields =
    { clientMutationId : (OptionalArgument String) }


{-| Type for the SendPasswordResetEmailInput input object.
-}
type alias SendPasswordResetEmailInput =
    { clientMutationId : (OptionalArgument String)
 , username : String }
    

{-| Encode a SendPasswordResetEmailInput into a value that can be used as an argument.
-}
encodeSendPasswordResetEmailInput : SendPasswordResetEmailInput -> Value
encodeSendPasswordResetEmailInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "username", (Encode.string)  input____.username |> Just ) ]


buildTagToContentNodeConnectionWhereArgs : (TagToContentNodeConnectionWhereArgsOptionalFields -> TagToContentNodeConnectionWhereArgsOptionalFields)
 -> TagToContentNodeConnectionWhereArgs
buildTagToContentNodeConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias TagToContentNodeConnectionWhereArgsOptionalFields =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the TagToContentNodeConnectionWhereArgs input object.
-}
type alias TagToContentNodeConnectionWhereArgs =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a TagToContentNodeConnectionWhereArgs into a value that can be used as an argument.
-}
encodeTagToContentNodeConnectionWhereArgs : TagToContentNodeConnectionWhereArgs -> Value
encodeTagToContentNodeConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildTagToPostConnectionWhereArgs : (TagToPostConnectionWhereArgsOptionalFields -> TagToPostConnectionWhereArgsOptionalFields)
 -> TagToPostConnectionWhereArgs
buildTagToPostConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, categoryId = Absent, categoryIn = Absent, categoryName = Absent, categoryNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, tag = Absent, tagId = Absent, tagIn = Absent, tagNotIn = Absent, tagSlugAnd = Absent, tagSlugIn = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, categoryId = optionals____.categoryId, categoryIn = optionals____.categoryIn, categoryName = optionals____.categoryName, categoryNotIn = optionals____.categoryNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, tag = optionals____.tag, tagId = optionals____.tagId, tagIn = optionals____.tagIn, tagNotIn = optionals____.tagNotIn, tagSlugAnd = optionals____.tagSlugAnd, tagSlugIn = optionals____.tagSlugIn, title = optionals____.title }


type alias TagToPostConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }


{-| Type for the TagToPostConnectionWhereArgs input object.
-}
type alias TagToPostConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }
    

{-| Encode a TagToPostConnectionWhereArgs into a value that can be used as an argument.
-}
encodeTagToPostConnectionWhereArgs : TagToPostConnectionWhereArgs -> Value
encodeTagToPostConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "categoryId", (Encode.int)  |> Encode.optional input____.categoryId ), ( "categoryIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryIn ), ( "categoryName", (Encode.string)  |> Encode.optional input____.categoryName ), ( "categoryNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "tag", (Encode.string)  |> Encode.optional input____.tag ), ( "tagId", (Encode.string)  |> Encode.optional input____.tagId ), ( "tagIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagIn ), ( "tagNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagNotIn ), ( "tagSlugAnd", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugAnd ), ( "tagSlugIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugIn ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildUpdateCategoryInput : UpdateCategoryInputRequiredFields
 -> (UpdateCategoryInputOptionalFields -> UpdateCategoryInputOptionalFields)
 -> UpdateCategoryInput
buildUpdateCategoryInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { aliasOf = Absent, clientMutationId = Absent, description = Absent, name = Absent, parentId = Absent, slug = Absent }
    in
    { aliasOf = optionals____.aliasOf, clientMutationId = optionals____.clientMutationId, description = optionals____.description, id = required____.id, name = optionals____.name, parentId = optionals____.parentId, slug = optionals____.slug }

type alias UpdateCategoryInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias UpdateCategoryInputOptionalFields =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , name : (OptionalArgument String)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , slug : (OptionalArgument String) }


{-| Type for the UpdateCategoryInput input object.
-}
type alias UpdateCategoryInput =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id
 , name : (OptionalArgument String)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , slug : (OptionalArgument String) }
    

{-| Encode a UpdateCategoryInput into a value that can be used as an argument.
-}
encodeUpdateCategoryInput : UpdateCategoryInput -> Value
encodeUpdateCategoryInput input____ =
    Encode.maybeObject
        [ ( "aliasOf", (Encode.string)  |> Encode.optional input____.aliasOf ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "parentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parentId ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ) ]


buildUpdateCommentInput : UpdateCommentInputRequiredFields
 -> (UpdateCommentInputOptionalFields -> UpdateCommentInputOptionalFields)
 -> UpdateCommentInput
buildUpdateCommentInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { approved = Absent, author = Absent, authorEmail = Absent, authorUrl = Absent, clientMutationId = Absent, commentOn = Absent, content = Absent, date = Absent, parent = Absent, type_ = Absent }
    in
    { approved = optionals____.approved, author = optionals____.author, authorEmail = optionals____.authorEmail, authorUrl = optionals____.authorUrl, clientMutationId = optionals____.clientMutationId, commentOn = optionals____.commentOn, content = optionals____.content, date = optionals____.date, id = required____.id, parent = optionals____.parent, type_ = optionals____.type_ }

type alias UpdateCommentInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias UpdateCommentInputOptionalFields =
    { approved : (OptionalArgument String)
 , author : (OptionalArgument String)
 , authorEmail : (OptionalArgument String)
 , authorUrl : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , commentOn : (OptionalArgument Int)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , type_ : (OptionalArgument String) }


{-| Type for the UpdateCommentInput input object.
-}
type alias UpdateCommentInput =
    { approved : (OptionalArgument String)
 , author : (OptionalArgument String)
 , authorEmail : (OptionalArgument String)
 , authorUrl : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , commentOn : (OptionalArgument Int)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , type_ : (OptionalArgument String) }
    

{-| Encode a UpdateCommentInput into a value that can be used as an argument.
-}
encodeUpdateCommentInput : UpdateCommentInput -> Value
encodeUpdateCommentInput input____ =
    Encode.maybeObject
        [ ( "approved", (Encode.string)  |> Encode.optional input____.approved ), ( "author", (Encode.string)  |> Encode.optional input____.author ), ( "authorEmail", (Encode.string)  |> Encode.optional input____.authorEmail ), ( "authorUrl", (Encode.string)  |> Encode.optional input____.authorUrl ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "commentOn", (Encode.int)  |> Encode.optional input____.commentOn ), ( "content", (Encode.string)  |> Encode.optional input____.content ), ( "date", (Encode.string)  |> Encode.optional input____.date ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "type", (Encode.string)  |> Encode.optional input____.type_ ) ]


buildUpdateMediaItemInput : UpdateMediaItemInputRequiredFields
 -> (UpdateMediaItemInputOptionalFields -> UpdateMediaItemInputOptionalFields)
 -> UpdateMediaItemInput
buildUpdateMediaItemInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { altText = Absent, authorId = Absent, caption = Absent, clientMutationId = Absent, commentStatus = Absent, date = Absent, dateGmt = Absent, description = Absent, filePath = Absent, fileType = Absent, parentId = Absent, pingStatus = Absent, slug = Absent, status = Absent, title = Absent }
    in
    { altText = optionals____.altText, authorId = optionals____.authorId, caption = optionals____.caption, clientMutationId = optionals____.clientMutationId, commentStatus = optionals____.commentStatus, date = optionals____.date, dateGmt = optionals____.dateGmt, description = optionals____.description, filePath = optionals____.filePath, fileType = optionals____.fileType, id = required____.id, parentId = optionals____.parentId, pingStatus = optionals____.pingStatus, slug = optionals____.slug, status = optionals____.status, title = optionals____.title }

type alias UpdateMediaItemInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias UpdateMediaItemInputOptionalFields =
    { altText : (OptionalArgument String)
 , authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , caption : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , date : (OptionalArgument String)
 , dateGmt : (OptionalArgument String)
 , description : (OptionalArgument String)
 , filePath : (OptionalArgument String)
 , fileType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , pingStatus : (OptionalArgument String)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.MediaItemStatusEnum.MediaItemStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the UpdateMediaItemInput input object.
-}
type alias UpdateMediaItemInput =
    { altText : (OptionalArgument String)
 , authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , caption : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , date : (OptionalArgument String)
 , dateGmt : (OptionalArgument String)
 , description : (OptionalArgument String)
 , filePath : (OptionalArgument String)
 , fileType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , id : Taco.ScalarCodecs.Id
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , pingStatus : (OptionalArgument String)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.MediaItemStatusEnum.MediaItemStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a UpdateMediaItemInput into a value that can be used as an argument.
-}
encodeUpdateMediaItemInput : UpdateMediaItemInput -> Value
encodeUpdateMediaItemInput input____ =
    Encode.maybeObject
        [ ( "altText", (Encode.string)  |> Encode.optional input____.altText ), ( "authorId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.authorId ), ( "caption", (Encode.string)  |> Encode.optional input____.caption ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "commentStatus", (Encode.string)  |> Encode.optional input____.commentStatus ), ( "date", (Encode.string)  |> Encode.optional input____.date ), ( "dateGmt", (Encode.string)  |> Encode.optional input____.dateGmt ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "filePath", (Encode.string)  |> Encode.optional input____.filePath ), ( "fileType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.fileType ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ), ( "parentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parentId ), ( "pingStatus", (Encode.string)  |> Encode.optional input____.pingStatus ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ), ( "status", ((Encode.enum Taco.Enum.MediaItemStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildUpdatePageInput : UpdatePageInputRequiredFields
 -> (UpdatePageInputOptionalFields -> UpdatePageInputOptionalFields)
 -> UpdatePageInput
buildUpdatePageInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorId = Absent, clientMutationId = Absent, commentStatus = Absent, content = Absent, date = Absent, menuOrder = Absent, parentId = Absent, password = Absent, slug = Absent, status = Absent, title = Absent }
    in
    { authorId = optionals____.authorId, clientMutationId = optionals____.clientMutationId, commentStatus = optionals____.commentStatus, content = optionals____.content, date = optionals____.date, id = required____.id, menuOrder = optionals____.menuOrder, parentId = optionals____.parentId, password = optionals____.password, slug = optionals____.slug, status = optionals____.status, title = optionals____.title }

type alias UpdatePageInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias UpdatePageInputOptionalFields =
    { authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , menuOrder : (OptionalArgument Int)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , password : (OptionalArgument String)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the UpdatePageInput input object.
-}
type alias UpdatePageInput =
    { authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id
 , menuOrder : (OptionalArgument Int)
 , parentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , password : (OptionalArgument String)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a UpdatePageInput into a value that can be used as an argument.
-}
encodeUpdatePageInput : UpdatePageInput -> Value
encodeUpdatePageInput input____ =
    Encode.maybeObject
        [ ( "authorId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.authorId ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "commentStatus", (Encode.string)  |> Encode.optional input____.commentStatus ), ( "content", (Encode.string)  |> Encode.optional input____.content ), ( "date", (Encode.string)  |> Encode.optional input____.date ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ), ( "menuOrder", (Encode.int)  |> Encode.optional input____.menuOrder ), ( "parentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parentId ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildUpdatePostFormatInput : UpdatePostFormatInputRequiredFields
 -> (UpdatePostFormatInputOptionalFields -> UpdatePostFormatInputOptionalFields)
 -> UpdatePostFormatInput
buildUpdatePostFormatInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { aliasOf = Absent, clientMutationId = Absent, description = Absent, name = Absent, slug = Absent }
    in
    { aliasOf = optionals____.aliasOf, clientMutationId = optionals____.clientMutationId, description = optionals____.description, id = required____.id, name = optionals____.name, slug = optionals____.slug }

type alias UpdatePostFormatInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias UpdatePostFormatInputOptionalFields =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , name : (OptionalArgument String)
 , slug : (OptionalArgument String) }


{-| Type for the UpdatePostFormatInput input object.
-}
type alias UpdatePostFormatInput =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id
 , name : (OptionalArgument String)
 , slug : (OptionalArgument String) }
    

{-| Encode a UpdatePostFormatInput into a value that can be used as an argument.
-}
encodeUpdatePostFormatInput : UpdatePostFormatInput -> Value
encodeUpdatePostFormatInput input____ =
    Encode.maybeObject
        [ ( "aliasOf", (Encode.string)  |> Encode.optional input____.aliasOf ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ) ]


buildUpdatePostInput : UpdatePostInputRequiredFields
 -> (UpdatePostInputOptionalFields -> UpdatePostInputOptionalFields)
 -> UpdatePostInput
buildUpdatePostInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorId = Absent, categories = Absent, clientMutationId = Absent, commentStatus = Absent, content = Absent, date = Absent, excerpt = Absent, menuOrder = Absent, password = Absent, pingStatus = Absent, pinged = Absent, postFormats = Absent, slug = Absent, status = Absent, tags = Absent, title = Absent, toPing = Absent }
    in
    { authorId = optionals____.authorId, categories = optionals____.categories, clientMutationId = optionals____.clientMutationId, commentStatus = optionals____.commentStatus, content = optionals____.content, date = optionals____.date, excerpt = optionals____.excerpt, id = required____.id, menuOrder = optionals____.menuOrder, password = optionals____.password, pingStatus = optionals____.pingStatus, pinged = optionals____.pinged, postFormats = optionals____.postFormats, slug = optionals____.slug, status = optionals____.status, tags = optionals____.tags, title = optionals____.title, toPing = optionals____.toPing }

type alias UpdatePostInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias UpdatePostInputOptionalFields =
    { authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , categories : (OptionalArgument PostCategoriesInput)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , excerpt : (OptionalArgument String)
 , menuOrder : (OptionalArgument Int)
 , password : (OptionalArgument String)
 , pingStatus : (OptionalArgument String)
 , pinged : (OptionalArgument (List (Maybe String)))
 , postFormats : (OptionalArgument PostPostFormatsInput)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tags : (OptionalArgument PostTagsInput)
 , title : (OptionalArgument String)
 , toPing : (OptionalArgument (List (Maybe String))) }


{-| Type for the UpdatePostInput input object.
-}
type alias UpdatePostInput =
    { authorId : (OptionalArgument Taco.ScalarCodecs.Id)
 , categories : (OptionalArgument PostCategoriesInput)
 , clientMutationId : (OptionalArgument String)
 , commentStatus : (OptionalArgument String)
 , content : (OptionalArgument String)
 , date : (OptionalArgument String)
 , excerpt : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id
 , menuOrder : (OptionalArgument Int)
 , password : (OptionalArgument String)
 , pingStatus : (OptionalArgument String)
 , pinged : (OptionalArgument (List (Maybe String)))
 , postFormats : (OptionalArgument PostPostFormatsInput)
 , slug : (OptionalArgument String)
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tags : (OptionalArgument PostTagsInput)
 , title : (OptionalArgument String)
 , toPing : (OptionalArgument (List (Maybe String))) }
    

{-| Encode a UpdatePostInput into a value that can be used as an argument.
-}
encodeUpdatePostInput : UpdatePostInput -> Value
encodeUpdatePostInput input____ =
    Encode.maybeObject
        [ ( "authorId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.authorId ), ( "categories", (encodePostCategoriesInput)  |> Encode.optional input____.categories ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "commentStatus", (Encode.string)  |> Encode.optional input____.commentStatus ), ( "content", (Encode.string)  |> Encode.optional input____.content ), ( "date", (Encode.string)  |> Encode.optional input____.date ), ( "excerpt", (Encode.string)  |> Encode.optional input____.excerpt ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ), ( "menuOrder", (Encode.int)  |> Encode.optional input____.menuOrder ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "pingStatus", (Encode.string)  |> Encode.optional input____.pingStatus ), ( "pinged", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.pinged ), ( "postFormats", (encodePostPostFormatsInput)  |> Encode.optional input____.postFormats ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "tags", (encodePostTagsInput)  |> Encode.optional input____.tags ), ( "title", (Encode.string)  |> Encode.optional input____.title ), ( "toPing", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.toPing ) ]


buildUpdateSettingsInput : (UpdateSettingsInputOptionalFields -> UpdateSettingsInputOptionalFields)
 -> UpdateSettingsInput
buildUpdateSettingsInput fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { clientMutationId = Absent, discussionSettingsDefaultCommentStatus = Absent, discussionSettingsDefaultPingStatus = Absent, generalSettingsDateFormat = Absent, generalSettingsDescription = Absent, generalSettingsEmail = Absent, generalSettingsLanguage = Absent, generalSettingsStartOfWeek = Absent, generalSettingsTimeFormat = Absent, generalSettingsTimezone = Absent, generalSettingsTitle = Absent, generalSettingsUrl = Absent, readingSettingsPostsPerPage = Absent, writingSettingsDefaultCategory = Absent, writingSettingsDefaultPostFormat = Absent, writingSettingsUseSmilies = Absent }
    in
    { clientMutationId = optionals____.clientMutationId, discussionSettingsDefaultCommentStatus = optionals____.discussionSettingsDefaultCommentStatus, discussionSettingsDefaultPingStatus = optionals____.discussionSettingsDefaultPingStatus, generalSettingsDateFormat = optionals____.generalSettingsDateFormat, generalSettingsDescription = optionals____.generalSettingsDescription, generalSettingsEmail = optionals____.generalSettingsEmail, generalSettingsLanguage = optionals____.generalSettingsLanguage, generalSettingsStartOfWeek = optionals____.generalSettingsStartOfWeek, generalSettingsTimeFormat = optionals____.generalSettingsTimeFormat, generalSettingsTimezone = optionals____.generalSettingsTimezone, generalSettingsTitle = optionals____.generalSettingsTitle, generalSettingsUrl = optionals____.generalSettingsUrl, readingSettingsPostsPerPage = optionals____.readingSettingsPostsPerPage, writingSettingsDefaultCategory = optionals____.writingSettingsDefaultCategory, writingSettingsDefaultPostFormat = optionals____.writingSettingsDefaultPostFormat, writingSettingsUseSmilies = optionals____.writingSettingsUseSmilies }


type alias UpdateSettingsInputOptionalFields =
    { clientMutationId : (OptionalArgument String)
 , discussionSettingsDefaultCommentStatus : (OptionalArgument String)
 , discussionSettingsDefaultPingStatus : (OptionalArgument String)
 , generalSettingsDateFormat : (OptionalArgument String)
 , generalSettingsDescription : (OptionalArgument String)
 , generalSettingsEmail : (OptionalArgument String)
 , generalSettingsLanguage : (OptionalArgument String)
 , generalSettingsStartOfWeek : (OptionalArgument Int)
 , generalSettingsTimeFormat : (OptionalArgument String)
 , generalSettingsTimezone : (OptionalArgument String)
 , generalSettingsTitle : (OptionalArgument String)
 , generalSettingsUrl : (OptionalArgument String)
 , readingSettingsPostsPerPage : (OptionalArgument Int)
 , writingSettingsDefaultCategory : (OptionalArgument Int)
 , writingSettingsDefaultPostFormat : (OptionalArgument String)
 , writingSettingsUseSmilies : (OptionalArgument Bool) }


{-| Type for the UpdateSettingsInput input object.
-}
type alias UpdateSettingsInput =
    { clientMutationId : (OptionalArgument String)
 , discussionSettingsDefaultCommentStatus : (OptionalArgument String)
 , discussionSettingsDefaultPingStatus : (OptionalArgument String)
 , generalSettingsDateFormat : (OptionalArgument String)
 , generalSettingsDescription : (OptionalArgument String)
 , generalSettingsEmail : (OptionalArgument String)
 , generalSettingsLanguage : (OptionalArgument String)
 , generalSettingsStartOfWeek : (OptionalArgument Int)
 , generalSettingsTimeFormat : (OptionalArgument String)
 , generalSettingsTimezone : (OptionalArgument String)
 , generalSettingsTitle : (OptionalArgument String)
 , generalSettingsUrl : (OptionalArgument String)
 , readingSettingsPostsPerPage : (OptionalArgument Int)
 , writingSettingsDefaultCategory : (OptionalArgument Int)
 , writingSettingsDefaultPostFormat : (OptionalArgument String)
 , writingSettingsUseSmilies : (OptionalArgument Bool) }
    

{-| Encode a UpdateSettingsInput into a value that can be used as an argument.
-}
encodeUpdateSettingsInput : UpdateSettingsInput -> Value
encodeUpdateSettingsInput input____ =
    Encode.maybeObject
        [ ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "discussionSettingsDefaultCommentStatus", (Encode.string)  |> Encode.optional input____.discussionSettingsDefaultCommentStatus ), ( "discussionSettingsDefaultPingStatus", (Encode.string)  |> Encode.optional input____.discussionSettingsDefaultPingStatus ), ( "generalSettingsDateFormat", (Encode.string)  |> Encode.optional input____.generalSettingsDateFormat ), ( "generalSettingsDescription", (Encode.string)  |> Encode.optional input____.generalSettingsDescription ), ( "generalSettingsEmail", (Encode.string)  |> Encode.optional input____.generalSettingsEmail ), ( "generalSettingsLanguage", (Encode.string)  |> Encode.optional input____.generalSettingsLanguage ), ( "generalSettingsStartOfWeek", (Encode.int)  |> Encode.optional input____.generalSettingsStartOfWeek ), ( "generalSettingsTimeFormat", (Encode.string)  |> Encode.optional input____.generalSettingsTimeFormat ), ( "generalSettingsTimezone", (Encode.string)  |> Encode.optional input____.generalSettingsTimezone ), ( "generalSettingsTitle", (Encode.string)  |> Encode.optional input____.generalSettingsTitle ), ( "generalSettingsUrl", (Encode.string)  |> Encode.optional input____.generalSettingsUrl ), ( "readingSettingsPostsPerPage", (Encode.int)  |> Encode.optional input____.readingSettingsPostsPerPage ), ( "writingSettingsDefaultCategory", (Encode.int)  |> Encode.optional input____.writingSettingsDefaultCategory ), ( "writingSettingsDefaultPostFormat", (Encode.string)  |> Encode.optional input____.writingSettingsDefaultPostFormat ), ( "writingSettingsUseSmilies", (Encode.bool)  |> Encode.optional input____.writingSettingsUseSmilies ) ]


buildUpdateTagInput : UpdateTagInputRequiredFields
 -> (UpdateTagInputOptionalFields -> UpdateTagInputOptionalFields)
 -> UpdateTagInput
buildUpdateTagInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { aliasOf = Absent, clientMutationId = Absent, description = Absent, name = Absent, slug = Absent }
    in
    { aliasOf = optionals____.aliasOf, clientMutationId = optionals____.clientMutationId, description = optionals____.description, id = required____.id, name = optionals____.name, slug = optionals____.slug }

type alias UpdateTagInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias UpdateTagInputOptionalFields =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , name : (OptionalArgument String)
 , slug : (OptionalArgument String) }


{-| Type for the UpdateTagInput input object.
-}
type alias UpdateTagInput =
    { aliasOf : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id
 , name : (OptionalArgument String)
 , slug : (OptionalArgument String) }
    

{-| Encode a UpdateTagInput into a value that can be used as an argument.
-}
encodeUpdateTagInput : UpdateTagInput -> Value
encodeUpdateTagInput input____ =
    Encode.maybeObject
        [ ( "aliasOf", (Encode.string)  |> Encode.optional input____.aliasOf ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "slug", (Encode.string)  |> Encode.optional input____.slug ) ]


buildUpdateUserInput : UpdateUserInputRequiredFields
 -> (UpdateUserInputOptionalFields -> UpdateUserInputOptionalFields)
 -> UpdateUserInput
buildUpdateUserInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { aim = Absent, clientMutationId = Absent, description = Absent, displayName = Absent, email = Absent, firstName = Absent, jabber = Absent, lastName = Absent, locale = Absent, nicename = Absent, nickname = Absent, password = Absent, registered = Absent, richEditing = Absent, roles = Absent, websiteUrl = Absent, yim = Absent }
    in
    { aim = optionals____.aim, clientMutationId = optionals____.clientMutationId, description = optionals____.description, displayName = optionals____.displayName, email = optionals____.email, firstName = optionals____.firstName, id = required____.id, jabber = optionals____.jabber, lastName = optionals____.lastName, locale = optionals____.locale, nicename = optionals____.nicename, nickname = optionals____.nickname, password = optionals____.password, registered = optionals____.registered, richEditing = optionals____.richEditing, roles = optionals____.roles, websiteUrl = optionals____.websiteUrl, yim = optionals____.yim }

type alias UpdateUserInputRequiredFields =
    { id : Taco.ScalarCodecs.Id }
type alias UpdateUserInputOptionalFields =
    { aim : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , displayName : (OptionalArgument String)
 , email : (OptionalArgument String)
 , firstName : (OptionalArgument String)
 , jabber : (OptionalArgument String)
 , lastName : (OptionalArgument String)
 , locale : (OptionalArgument String)
 , nicename : (OptionalArgument String)
 , nickname : (OptionalArgument String)
 , password : (OptionalArgument String)
 , registered : (OptionalArgument String)
 , richEditing : (OptionalArgument String)
 , roles : (OptionalArgument (List (Maybe String)))
 , websiteUrl : (OptionalArgument String)
 , yim : (OptionalArgument String) }


{-| Type for the UpdateUserInput input object.
-}
type alias UpdateUserInput =
    { aim : (OptionalArgument String)
 , clientMutationId : (OptionalArgument String)
 , description : (OptionalArgument String)
 , displayName : (OptionalArgument String)
 , email : (OptionalArgument String)
 , firstName : (OptionalArgument String)
 , id : Taco.ScalarCodecs.Id
 , jabber : (OptionalArgument String)
 , lastName : (OptionalArgument String)
 , locale : (OptionalArgument String)
 , nicename : (OptionalArgument String)
 , nickname : (OptionalArgument String)
 , password : (OptionalArgument String)
 , registered : (OptionalArgument String)
 , richEditing : (OptionalArgument String)
 , roles : (OptionalArgument (List (Maybe String)))
 , websiteUrl : (OptionalArgument String)
 , yim : (OptionalArgument String) }
    

{-| Encode a UpdateUserInput into a value that can be used as an argument.
-}
encodeUpdateUserInput : UpdateUserInput -> Value
encodeUpdateUserInput input____ =
    Encode.maybeObject
        [ ( "aim", (Encode.string)  |> Encode.optional input____.aim ), ( "clientMutationId", (Encode.string)  |> Encode.optional input____.clientMutationId ), ( "description", (Encode.string)  |> Encode.optional input____.description ), ( "displayName", (Encode.string)  |> Encode.optional input____.displayName ), ( "email", (Encode.string)  |> Encode.optional input____.email ), ( "firstName", (Encode.string)  |> Encode.optional input____.firstName ), ( "id", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  input____.id |> Just ), ( "jabber", (Encode.string)  |> Encode.optional input____.jabber ), ( "lastName", (Encode.string)  |> Encode.optional input____.lastName ), ( "locale", (Encode.string)  |> Encode.optional input____.locale ), ( "nicename", (Encode.string)  |> Encode.optional input____.nicename ), ( "nickname", (Encode.string)  |> Encode.optional input____.nickname ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "registered", (Encode.string)  |> Encode.optional input____.registered ), ( "richEditing", (Encode.string)  |> Encode.optional input____.richEditing ), ( "roles", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.roles ), ( "websiteUrl", (Encode.string)  |> Encode.optional input____.websiteUrl ), ( "yim", (Encode.string)  |> Encode.optional input____.yim ) ]


buildUserToCommentConnectionWhereArgs : (UserToCommentConnectionWhereArgsOptionalFields -> UserToCommentConnectionWhereArgsOptionalFields)
 -> UserToCommentConnectionWhereArgs
buildUserToCommentConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { authorEmail = Absent, authorIn = Absent, authorNotIn = Absent, authorUrl = Absent, commentIn = Absent, commentNotIn = Absent, commentType = Absent, commentTypeIn = Absent, commentTypeNotIn = Absent, contentAuthor = Absent, contentAuthorIn = Absent, contentAuthorNotIn = Absent, contentId = Absent, contentIdIn = Absent, contentIdNotIn = Absent, contentName = Absent, contentParent = Absent, contentStatus = Absent, contentType = Absent, includeUnapproved = Absent, karma = Absent, order = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, search = Absent, status = Absent, userId = Absent }
    in
    { authorEmail = optionals____.authorEmail, authorIn = optionals____.authorIn, authorNotIn = optionals____.authorNotIn, authorUrl = optionals____.authorUrl, commentIn = optionals____.commentIn, commentNotIn = optionals____.commentNotIn, commentType = optionals____.commentType, commentTypeIn = optionals____.commentTypeIn, commentTypeNotIn = optionals____.commentTypeNotIn, contentAuthor = optionals____.contentAuthor, contentAuthorIn = optionals____.contentAuthorIn, contentAuthorNotIn = optionals____.contentAuthorNotIn, contentId = optionals____.contentId, contentIdIn = optionals____.contentIdIn, contentIdNotIn = optionals____.contentIdNotIn, contentName = optionals____.contentName, contentParent = optionals____.contentParent, contentStatus = optionals____.contentStatus, contentType = optionals____.contentType, includeUnapproved = optionals____.includeUnapproved, karma = optionals____.karma, order = optionals____.order, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, search = optionals____.search, status = optionals____.status, userId = optionals____.userId }


type alias UserToCommentConnectionWhereArgsOptionalFields =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }


{-| Type for the UserToCommentConnectionWhereArgs input object.
-}
type alias UserToCommentConnectionWhereArgs =
    { authorEmail : (OptionalArgument String)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorUrl : (OptionalArgument String)
 , commentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , commentType : (OptionalArgument String)
 , commentTypeIn : (OptionalArgument (List (Maybe String)))
 , commentTypeNotIn : (OptionalArgument String)
 , contentAuthor : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentAuthorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentId : (OptionalArgument Taco.ScalarCodecs.Id)
 , contentIdIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentIdNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , contentName : (OptionalArgument String)
 , contentParent : (OptionalArgument Int)
 , contentStatus : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , contentType : (OptionalArgument (List (Maybe Taco.Enum.ContentTypeEnum.ContentTypeEnum)))
 , includeUnapproved : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , karma : (OptionalArgument Int)
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum)
 , orderby : (OptionalArgument Taco.Enum.CommentsConnectionOrderbyEnum.CommentsConnectionOrderbyEnum)
 , parent : (OptionalArgument Int)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , search : (OptionalArgument String)
 , status : (OptionalArgument String)
 , userId : (OptionalArgument Taco.ScalarCodecs.Id) }
    

{-| Encode a UserToCommentConnectionWhereArgs into a value that can be used as an argument.
-}
encodeUserToCommentConnectionWhereArgs : UserToCommentConnectionWhereArgs -> Value
encodeUserToCommentConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "authorEmail", (Encode.string)  |> Encode.optional input____.authorEmail ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "authorUrl", (Encode.string)  |> Encode.optional input____.authorUrl ), ( "commentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentIn ), ( "commentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentNotIn ), ( "commentType", (Encode.string)  |> Encode.optional input____.commentType ), ( "commentTypeIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.commentTypeIn ), ( "commentTypeNotIn", (Encode.string)  |> Encode.optional input____.commentTypeNotIn ), ( "contentAuthor", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthor ), ( "contentAuthorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorIn ), ( "contentAuthorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentAuthorNotIn ), ( "contentId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.contentId ), ( "contentIdIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdIn ), ( "contentIdNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentIdNotIn ), ( "contentName", (Encode.string)  |> Encode.optional input____.contentName ), ( "contentParent", (Encode.int)  |> Encode.optional input____.contentParent ), ( "contentStatus", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentStatus ), ( "contentType", ((Encode.enum Taco.Enum.ContentTypeEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.contentType ), ( "includeUnapproved", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.includeUnapproved ), ( "karma", (Encode.int)  |> Encode.optional input____.karma ), ( "order", ((Encode.enum Taco.Enum.OrderEnum.toString))  |> Encode.optional input____.order ), ( "orderby", ((Encode.enum Taco.Enum.CommentsConnectionOrderbyEnum.toString))  |> Encode.optional input____.orderby ), ( "parent", (Encode.int)  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "status", (Encode.string)  |> Encode.optional input____.status ), ( "userId", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.userId ) ]


buildUserToContentRevisionUnionConnectionWhereArgs : (UserToContentRevisionUnionConnectionWhereArgsOptionalFields -> UserToContentRevisionUnionConnectionWhereArgsOptionalFields)
 -> UserToContentRevisionUnionConnectionWhereArgs
buildUserToContentRevisionUnionConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias UserToContentRevisionUnionConnectionWhereArgsOptionalFields =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the UserToContentRevisionUnionConnectionWhereArgs input object.
-}
type alias UserToContentRevisionUnionConnectionWhereArgs =
    { dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a UserToContentRevisionUnionConnectionWhereArgs into a value that can be used as an argument.
-}
encodeUserToContentRevisionUnionConnectionWhereArgs : UserToContentRevisionUnionConnectionWhereArgs -> Value
encodeUserToContentRevisionUnionConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildUserToMediaItemConnectionWhereArgs : (UserToMediaItemConnectionWhereArgsOptionalFields -> UserToMediaItemConnectionWhereArgsOptionalFields)
 -> UserToMediaItemConnectionWhereArgs
buildUserToMediaItemConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias UserToMediaItemConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the UserToMediaItemConnectionWhereArgs input object.
-}
type alias UserToMediaItemConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a UserToMediaItemConnectionWhereArgs into a value that can be used as an argument.
-}
encodeUserToMediaItemConnectionWhereArgs : UserToMediaItemConnectionWhereArgs -> Value
encodeUserToMediaItemConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildUserToPageConnectionWhereArgs : (UserToPageConnectionWhereArgsOptionalFields -> UserToPageConnectionWhereArgsOptionalFields)
 -> UserToPageConnectionWhereArgs
buildUserToPageConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, title = optionals____.title }


type alias UserToPageConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }


{-| Type for the UserToPageConnectionWhereArgs input object.
-}
type alias UserToPageConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , title : (OptionalArgument String) }
    

{-| Encode a UserToPageConnectionWhereArgs into a value that can be used as an argument.
-}
encodeUserToPageConnectionWhereArgs : UserToPageConnectionWhereArgs -> Value
encodeUserToPageConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildUserToPostConnectionWhereArgs : (UserToPostConnectionWhereArgsOptionalFields -> UserToPostConnectionWhereArgsOptionalFields)
 -> UserToPostConnectionWhereArgs
buildUserToPostConnectionWhereArgs fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { author = Absent, authorIn = Absent, authorName = Absent, authorNotIn = Absent, categoryId = Absent, categoryIn = Absent, categoryName = Absent, categoryNotIn = Absent, dateQuery = Absent, hasPassword = Absent, id = Absent, in_ = Absent, mimeType = Absent, name = Absent, nameIn = Absent, notIn = Absent, orderby = Absent, parent = Absent, parentIn = Absent, parentNotIn = Absent, password = Absent, search = Absent, stati = Absent, status = Absent, tag = Absent, tagId = Absent, tagIn = Absent, tagNotIn = Absent, tagSlugAnd = Absent, tagSlugIn = Absent, title = Absent }
    in
    { author = optionals____.author, authorIn = optionals____.authorIn, authorName = optionals____.authorName, authorNotIn = optionals____.authorNotIn, categoryId = optionals____.categoryId, categoryIn = optionals____.categoryIn, categoryName = optionals____.categoryName, categoryNotIn = optionals____.categoryNotIn, dateQuery = optionals____.dateQuery, hasPassword = optionals____.hasPassword, id = optionals____.id, in_ = optionals____.in_, mimeType = optionals____.mimeType, name = optionals____.name, nameIn = optionals____.nameIn, notIn = optionals____.notIn, orderby = optionals____.orderby, parent = optionals____.parent, parentIn = optionals____.parentIn, parentNotIn = optionals____.parentNotIn, password = optionals____.password, search = optionals____.search, stati = optionals____.stati, status = optionals____.status, tag = optionals____.tag, tagId = optionals____.tagId, tagIn = optionals____.tagIn, tagNotIn = optionals____.tagNotIn, tagSlugAnd = optionals____.tagSlugAnd, tagSlugIn = optionals____.tagSlugIn, title = optionals____.title }


type alias UserToPostConnectionWhereArgsOptionalFields =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }


{-| Type for the UserToPostConnectionWhereArgs input object.
-}
type alias UserToPostConnectionWhereArgs =
    { author : (OptionalArgument Int)
 , authorIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , authorName : (OptionalArgument String)
 , authorNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryId : (OptionalArgument Int)
 , categoryIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , categoryName : (OptionalArgument String)
 , categoryNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , dateQuery : (OptionalArgument DateQueryInput)
 , hasPassword : (OptionalArgument Bool)
 , id : (OptionalArgument Int)
 , in_ : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , mimeType : (OptionalArgument Taco.Enum.MimeTypeEnum.MimeTypeEnum)
 , name : (OptionalArgument String)
 , nameIn : (OptionalArgument (List (Maybe String)))
 , notIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , orderby : (OptionalArgument (List (Maybe PostObjectsConnectionOrderbyInput)))
 , parent : (OptionalArgument Taco.ScalarCodecs.Id)
 , parentIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , parentNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , password : (OptionalArgument String)
 , search : (OptionalArgument String)
 , stati : (OptionalArgument (List (Maybe Taco.Enum.PostStatusEnum.PostStatusEnum)))
 , status : (OptionalArgument Taco.Enum.PostStatusEnum.PostStatusEnum)
 , tag : (OptionalArgument String)
 , tagId : (OptionalArgument String)
 , tagIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagNotIn : (OptionalArgument (List (Maybe Taco.ScalarCodecs.Id)))
 , tagSlugAnd : (OptionalArgument (List (Maybe String)))
 , tagSlugIn : (OptionalArgument (List (Maybe String)))
 , title : (OptionalArgument String) }
    

{-| Encode a UserToPostConnectionWhereArgs into a value that can be used as an argument.
-}
encodeUserToPostConnectionWhereArgs : UserToPostConnectionWhereArgs -> Value
encodeUserToPostConnectionWhereArgs input____ =
    Encode.maybeObject
        [ ( "author", (Encode.int)  |> Encode.optional input____.author ), ( "authorIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorIn ), ( "authorName", (Encode.string)  |> Encode.optional input____.authorName ), ( "authorNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.authorNotIn ), ( "categoryId", (Encode.int)  |> Encode.optional input____.categoryId ), ( "categoryIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryIn ), ( "categoryName", (Encode.string)  |> Encode.optional input____.categoryName ), ( "categoryNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.categoryNotIn ), ( "dateQuery", (encodeDateQueryInput)  |> Encode.optional input____.dateQuery ), ( "hasPassword", (Encode.bool)  |> Encode.optional input____.hasPassword ), ( "id", (Encode.int)  |> Encode.optional input____.id ), ( "in", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.in_ ), ( "mimeType", ((Encode.enum Taco.Enum.MimeTypeEnum.toString))  |> Encode.optional input____.mimeType ), ( "name", (Encode.string)  |> Encode.optional input____.name ), ( "nameIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.nameIn ), ( "notIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.notIn ), ( "orderby", (encodePostObjectsConnectionOrderbyInput |> Encode.maybe |> Encode.list)  |> Encode.optional input____.orderby ), ( "parent", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId))  |> Encode.optional input____.parent ), ( "parentIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentIn ), ( "parentNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.parentNotIn ), ( "password", (Encode.string)  |> Encode.optional input____.password ), ( "search", (Encode.string)  |> Encode.optional input____.search ), ( "stati", ((Encode.enum Taco.Enum.PostStatusEnum.toString) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.stati ), ( "status", ((Encode.enum Taco.Enum.PostStatusEnum.toString))  |> Encode.optional input____.status ), ( "tag", (Encode.string)  |> Encode.optional input____.tag ), ( "tagId", (Encode.string)  |> Encode.optional input____.tagId ), ( "tagIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagIn ), ( "tagNotIn", ((Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapEncoder .codecId) |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagNotIn ), ( "tagSlugAnd", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugAnd ), ( "tagSlugIn", (Encode.string |> Encode.maybe |> Encode.list)  |> Encode.optional input____.tagSlugIn ), ( "title", (Encode.string)  |> Encode.optional input____.title ) ]


buildUsersConnectionOrderbyInput : UsersConnectionOrderbyInputRequiredFields
 -> (UsersConnectionOrderbyInputOptionalFields -> UsersConnectionOrderbyInputOptionalFields)
 -> UsersConnectionOrderbyInput
buildUsersConnectionOrderbyInput required____ fillOptionals____ =

    let
        optionals____ =
            
            fillOptionals____
                { order = Absent }
    in
    { field = required____.field, order = optionals____.order }

type alias UsersConnectionOrderbyInputRequiredFields =
    { field : Taco.Enum.UsersConnectionOrderbyEnum.UsersConnectionOrderbyEnum }
type alias UsersConnectionOrderbyInputOptionalFields =
    { order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum) }


{-| Type for the UsersConnectionOrderbyInput input object.
-}
type alias UsersConnectionOrderbyInput =
    { field : Taco.Enum.UsersConnectionOrderbyEnum.UsersConnectionOrderbyEnum
 , order : (OptionalArgument Taco.Enum.OrderEnum.OrderEnum) }
    

{-| Encode a UsersConnectionOrderbyInput into a value that can be used as an argument.
-}
encodeUsersConnectionOrderbyInput : UsersConnectionOrderbyInput -> Value
encodeUsersConnectionOrderbyInput input____ =
    Encode.maybeObject
        [ ( "field", ((Encode.enum Taco.Enum.UsersConnectionOrderbyEnum.toString))  input____.field |> Just ), ( "order", ((Encode.enum Taco.Enum.OrderEnum.toString))  |> Encode.optional input____.order ) ]
