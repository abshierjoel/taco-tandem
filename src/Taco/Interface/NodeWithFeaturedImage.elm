-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Taco.Interface.NodeWithFeaturedImage exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Taco.Object
import Taco.Interface
import Taco.Union
import Taco.Scalar
import Taco.InputObject
import Taco.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)


type alias Fragments decodesTo =
    {
    onPage : SelectionSet decodesTo Taco.Object.Page,
 onPost : SelectionSet decodesTo Taco.Object.Post
    }


{-| Build an exhaustive selection of type-specific fragments.
-}
fragments :
      Fragments decodesTo
      -> SelectionSet decodesTo Taco.Interface.NodeWithFeaturedImage
fragments selections____ =
    Object.exhaustiveFragmentSelection
        [
         Object.buildFragment "Page" selections____.onPage,
 Object.buildFragment "Post" selections____.onPost
        ]


{-| Can be used to create a non-exhaustive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    {
      onPage = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing),
 onPost = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }
{-| Connection between the NodeWithFeaturedImage type and the MediaItem type
-}
featuredImage : SelectionSet decodesTo Taco.Object.NodeWithFeaturedImageToMediaItemConnectionEdge
 -> SelectionSet (Maybe decodesTo) Taco.Interface.NodeWithFeaturedImage
featuredImage object____ =
      Object.selectionForCompositeField "featuredImage" [] (object____) (identity >> Decode.nullable)


{-| The database identifier for the featured image node assigned to the content node
-}
featuredImageDatabaseId : SelectionSet (Maybe Int) Taco.Interface.NodeWithFeaturedImage
featuredImageDatabaseId =
      Object.selectionForField "(Maybe Int)" "featuredImageDatabaseId" [] (Decode.int |> Decode.nullable)


{-| Globally unique ID of the featured image assigned to the node
-}
featuredImageId : SelectionSet (Maybe Taco.ScalarCodecs.Id) Taco.Interface.NodeWithFeaturedImage
featuredImageId =
      Object.selectionForField "(Maybe ScalarCodecs.Id)" "featuredImageId" [] (Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)
