-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Taco.Object.ContentType exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Taco.Object
import Taco.Interface
import Taco.Union
import Taco.Scalar
import Taco.InputObject
import Taco.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)

{-| Whether this content type should can be exported.
-}
canExport : SelectionSet (Maybe Bool) Taco.Object.ContentType
canExport =
      Object.selectionForField "(Maybe Bool)" "canExport" [] (Decode.bool |> Decode.nullable)


type alias ConnectedTaxonomiesOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String }

{-| Connection between the ContentType type and the Taxonomy type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data

-}
connectedTaxonomies : (ConnectedTaxonomiesOptionalArguments -> ConnectedTaxonomiesOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.ContentTypeToTaxonomyConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.ContentType
connectedTaxonomies fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "connectedTaxonomies" optionalArgs____ (object____) (identity >> Decode.nullable)


type alias ContentNodesOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String
 , where_ : OptionalArgument Taco.InputObject.ContentTypeToContentNodeConnectionWhereArgs }

{-| Connection between the ContentType type and the ContentNode type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data
  - where_ - Arguments for filtering the connection

-}
contentNodes : (ContentNodesOptionalArguments -> ContentNodesOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.ContentTypeToContentNodeConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.ContentType
contentNodes fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeContentTypeToContentNodeConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "contentNodes" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| Whether content of this type should be deleted when the author of it is deleted from the system.
-}
deleteWithUser : SelectionSet (Maybe Bool) Taco.Object.ContentType
deleteWithUser =
      Object.selectionForField "(Maybe Bool)" "deleteWithUser" [] (Decode.bool |> Decode.nullable)


{-| Description of the content type.
-}
description : SelectionSet (Maybe String) Taco.Object.ContentType
description =
      Object.selectionForField "(Maybe String)" "description" [] (Decode.string |> Decode.nullable)


{-| Whether to exclude nodes of this content type from front end search results.
-}
excludeFromSearch : SelectionSet (Maybe Bool) Taco.Object.ContentType
excludeFromSearch =
      Object.selectionForField "(Maybe Bool)" "excludeFromSearch" [] (Decode.bool |> Decode.nullable)


{-| The plural name of the content type within the GraphQL Schema.
-}
graphqlPluralName : SelectionSet (Maybe String) Taco.Object.ContentType
graphqlPluralName =
      Object.selectionForField "(Maybe String)" "graphqlPluralName" [] (Decode.string |> Decode.nullable)


{-| The singular name of the content type within the GraphQL Schema.
-}
graphqlSingleName : SelectionSet (Maybe String) Taco.Object.ContentType
graphqlSingleName =
      Object.selectionForField "(Maybe String)" "graphqlSingleName" [] (Decode.string |> Decode.nullable)


{-| Whether this content type should have archives. Content archives are generated by type and by date.
-}
hasArchive : SelectionSet (Maybe Bool) Taco.Object.ContentType
hasArchive =
      Object.selectionForField "(Maybe Bool)" "hasArchive" [] (Decode.bool |> Decode.nullable)


{-| Whether the content type is hierarchical, for example pages.
-}
hierarchical : SelectionSet (Maybe Bool) Taco.Object.ContentType
hierarchical =
      Object.selectionForField "(Maybe Bool)" "hierarchical" [] (Decode.bool |> Decode.nullable)


{-| The globally unique identifier of the post-type object.
-}
id : SelectionSet Taco.ScalarCodecs.Id Taco.Object.ContentType
id =
      Object.selectionForField "ScalarCodecs.Id" "id" [] (Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Whether this page is set to the static front page.
-}
isFrontPage : SelectionSet Bool Taco.Object.ContentType
isFrontPage =
      Object.selectionForField "Bool" "isFrontPage" [] (Decode.bool)


{-| Whether this page is set to the blog posts page.
-}
isPostsPage : SelectionSet Bool Taco.Object.ContentType
isPostsPage =
      Object.selectionForField "Bool" "isPostsPage" [] (Decode.bool)


{-| Whether the object is restricted from the current viewer
-}
isRestricted : SelectionSet (Maybe Bool) Taco.Object.ContentType
isRestricted =
      Object.selectionForField "(Maybe Bool)" "isRestricted" [] (Decode.bool |> Decode.nullable)


{-| Display name of the content type.
-}
label : SelectionSet (Maybe String) Taco.Object.ContentType
label =
      Object.selectionForField "(Maybe String)" "label" [] (Decode.string |> Decode.nullable)


{-| Details about the content type labels.
-}
labels : SelectionSet decodesTo Taco.Object.PostTypeLabelDetails
 -> SelectionSet (Maybe decodesTo) Taco.Object.ContentType
labels object____ =
      Object.selectionForCompositeField "labels" [] (object____) (identity >> Decode.nullable)


{-| The name of the icon file to display as a menu icon.
-}
menuIcon : SelectionSet (Maybe String) Taco.Object.ContentType
menuIcon =
      Object.selectionForField "(Maybe String)" "menuIcon" [] (Decode.string |> Decode.nullable)


{-| The position of this post type in the menu. Only applies if show_in_menu is true.
-}
menuPosition : SelectionSet (Maybe Int) Taco.Object.ContentType
menuPosition =
      Object.selectionForField "(Maybe Int)" "menuPosition" [] (Decode.int |> Decode.nullable)


{-| The internal name of the post type. This should not be used for display purposes.
-}
name : SelectionSet (Maybe String) Taco.Object.ContentType
name =
      Object.selectionForField "(Maybe String)" "name" [] (Decode.string |> Decode.nullable)


{-| Whether a content type is intended for use publicly either via the admin interface or by front-end users. While the default settings of exclude_from_search, publicly_queryable, show_ui, and show_in_nav_menus are inherited from public, each does not rely on this relationship and controls a very specific intention.
-}
public : SelectionSet (Maybe Bool) Taco.Object.ContentType
public =
      Object.selectionForField "(Maybe Bool)" "public" [] (Decode.bool |> Decode.nullable)


{-| Whether queries can be performed on the front end for the content type as part of parse_request().
-}
publiclyQueryable : SelectionSet (Maybe Bool) Taco.Object.ContentType
publiclyQueryable =
      Object.selectionForField "(Maybe Bool)" "publiclyQueryable" [] (Decode.bool |> Decode.nullable)


{-| Name of content type to display in REST API &quot;wp/v2&quot; namespace.
-}
restBase : SelectionSet (Maybe String) Taco.Object.ContentType
restBase =
      Object.selectionForField "(Maybe String)" "restBase" [] (Decode.string |> Decode.nullable)


{-| The REST Controller class assigned to handling this content type.
-}
restControllerClass : SelectionSet (Maybe String) Taco.Object.ContentType
restControllerClass =
      Object.selectionForField "(Maybe String)" "restControllerClass" [] (Decode.string |> Decode.nullable)


{-| Makes this content type available via the admin bar.
-}
showInAdminBar : SelectionSet (Maybe Bool) Taco.Object.ContentType
showInAdminBar =
      Object.selectionForField "(Maybe Bool)" "showInAdminBar" [] (Decode.bool |> Decode.nullable)


{-| Whether to add the content type to the GraphQL Schema.
-}
showInGraphql : SelectionSet (Maybe Bool) Taco.Object.ContentType
showInGraphql =
      Object.selectionForField "(Maybe Bool)" "showInGraphql" [] (Decode.bool |> Decode.nullable)


{-| Where to show the content type in the admin menu. To work, $show_ui must be true. If true, the post type is shown in its own top level menu. If false, no menu is shown. If a string of an existing top level menu (eg. &quot;tools.php&quot; or &quot;edit.php?post_type=page&quot;), the post type will be placed as a sub-menu of that.
-}
showInMenu : SelectionSet (Maybe Bool) Taco.Object.ContentType
showInMenu =
      Object.selectionForField "(Maybe Bool)" "showInMenu" [] (Decode.bool |> Decode.nullable)


{-| Makes this content type available for selection in navigation menus.
-}
showInNavMenus : SelectionSet (Maybe Bool) Taco.Object.ContentType
showInNavMenus =
      Object.selectionForField "(Maybe Bool)" "showInNavMenus" [] (Decode.bool |> Decode.nullable)


{-| Whether the content type is associated with a route under the the REST API &quot;wp/v2&quot; namespace.
-}
showInRest : SelectionSet (Maybe Bool) Taco.Object.ContentType
showInRest =
      Object.selectionForField "(Maybe Bool)" "showInRest" [] (Decode.bool |> Decode.nullable)


{-| Whether to generate and allow a UI for managing this content type in the admin.
-}
showUi : SelectionSet (Maybe Bool) Taco.Object.ContentType
showUi =
      Object.selectionForField "(Maybe Bool)" "showUi" [] (Decode.bool |> Decode.nullable)


{-| The unique resource identifier path
-}
uri : SelectionSet (Maybe String) Taco.Object.ContentType
uri =
      Object.selectionForField "(Maybe String)" "uri" [] (Decode.string |> Decode.nullable)
