-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Taco.Object.MediaItem exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Taco.Object
import Taco.Interface
import Taco.Union
import Taco.Scalar
import Taco.InputObject
import Taco.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)
import Taco.Enum.PostObjectFieldFormatEnum
import Taco.Enum.PostObjectFieldFormatEnum
import Taco.Enum.MediaItemSizeEnum
import Taco.Enum.MediaItemSizeEnum
import Taco.Enum.MediaItemSizeEnum
import Taco.Enum.MediaItemSizeEnum
import Taco.Enum.PostObjectFieldFormatEnum
{-| Alternative text to display when resource is not displayed
-}
altText : SelectionSet (Maybe String) Taco.Object.MediaItem
altText =
      Object.selectionForField "(Maybe String)" "altText" [] (Decode.string |> Decode.nullable)


type alias AncestorsOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String
 , where_ : OptionalArgument Taco.InputObject.HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs }

{-| Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data
  - where_ - Arguments for filtering the connection

-}
ancestors : (AncestorsOptionalArguments -> AncestorsOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.HierarchicalContentNodeToContentNodeAncestorsConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
ancestors fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeHierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "ancestors" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| Connection between the NodeWithAuthor type and the User type
-}
author : SelectionSet decodesTo Taco.Object.NodeWithAuthorToUserConnectionEdge
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
author object____ =
      Object.selectionForCompositeField "author" [] (object____) (identity >> Decode.nullable)


{-| The database identifier of the author of the node
-}
authorDatabaseId : SelectionSet (Maybe Int) Taco.Object.MediaItem
authorDatabaseId =
      Object.selectionForField "(Maybe Int)" "authorDatabaseId" [] (Decode.int |> Decode.nullable)


{-| The globally unique identifier of the author of the node
-}
authorId : SelectionSet (Maybe Taco.ScalarCodecs.Id) Taco.Object.MediaItem
authorId =
      Object.selectionForField "(Maybe ScalarCodecs.Id)" "authorId" [] (Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)


type alias CaptionOptionalArguments = { format : OptionalArgument Taco.Enum.PostObjectFieldFormatEnum.PostObjectFieldFormatEnum }

{-| The caption for the resource

  - format - Format of the field output

-}
caption : (CaptionOptionalArguments -> CaptionOptionalArguments)
 -> SelectionSet (Maybe String) Taco.Object.MediaItem
caption fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { format = Absent }

        optionalArgs____ =
            [ Argument.optional "format" filledInOptionals____.format ((Encode.enum Taco.Enum.PostObjectFieldFormatEnum.toString)) ]
                |> List.filterMap identity
    in
      Object.selectionForField "(Maybe String)" "caption" optionalArgs____ (Decode.string |> Decode.nullable)


type alias ChildrenOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String
 , where_ : OptionalArgument Taco.InputObject.HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs }

{-| Connection between the HierarchicalContentNode type and the ContentNode type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data
  - where_ - Arguments for filtering the connection

-}
children : (ChildrenOptionalArguments -> ChildrenOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.HierarchicalContentNodeToContentNodeChildrenConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
children fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeHierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "children" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
-}
commentCount : SelectionSet (Maybe Int) Taco.Object.MediaItem
commentCount =
      Object.selectionForField "(Maybe Int)" "commentCount" [] (Decode.int |> Decode.nullable)


{-| Whether the comments are open or closed for this particular post.
-}
commentStatus : SelectionSet (Maybe String) Taco.Object.MediaItem
commentStatus =
      Object.selectionForField "(Maybe String)" "commentStatus" [] (Decode.string |> Decode.nullable)


type alias CommentsOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String
 , where_ : OptionalArgument Taco.InputObject.MediaItemToCommentConnectionWhereArgs }

{-| Connection between the mediaItem type and the Comment type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data
  - where_ - Arguments for filtering the connection

-}
comments : (CommentsOptionalArguments -> CommentsOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.MediaItemToCommentConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
comments fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeMediaItemToCommentConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "comments" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| Connection between the ContentNode type and the ContentType type
-}
contentType : SelectionSet decodesTo Taco.Object.ContentNodeToContentTypeConnectionEdge
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
contentType object____ =
      Object.selectionForCompositeField "contentType" [] (object____) (identity >> Decode.nullable)


{-| The ID of the node in the database.
-}
databaseId : SelectionSet Int Taco.Object.MediaItem
databaseId =
      Object.selectionForField "Int" "databaseId" [] (Decode.int)


{-| Post publishing date.
-}
date : SelectionSet (Maybe String) Taco.Object.MediaItem
date =
      Object.selectionForField "(Maybe String)" "date" [] (Decode.string |> Decode.nullable)


{-| The publishing date set in GMT.
-}
dateGmt : SelectionSet (Maybe String) Taco.Object.MediaItem
dateGmt =
      Object.selectionForField "(Maybe String)" "dateGmt" [] (Decode.string |> Decode.nullable)


type alias DescriptionOptionalArguments = { format : OptionalArgument Taco.Enum.PostObjectFieldFormatEnum.PostObjectFieldFormatEnum }

{-| Description of the image (stored as post_content)

  - format - Format of the field output

-}
description : (DescriptionOptionalArguments -> DescriptionOptionalArguments)
 -> SelectionSet (Maybe String) Taco.Object.MediaItem
description fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { format = Absent }

        optionalArgs____ =
            [ Argument.optional "format" filledInOptionals____.format ((Encode.enum Taco.Enum.PostObjectFieldFormatEnum.toString)) ]
                |> List.filterMap identity
    in
      Object.selectionForField "(Maybe String)" "description" optionalArgs____ (Decode.string |> Decode.nullable)


{-| The desired slug of the post
-}
desiredSlug : SelectionSet (Maybe String) Taco.Object.MediaItem
desiredSlug =
      Object.selectionForField "(Maybe String)" "desiredSlug" [] (Decode.string |> Decode.nullable)


{-| If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
-}
editingLockedBy : SelectionSet decodesTo Taco.Object.ContentNodeToEditLockConnectionEdge
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
editingLockedBy object____ =
      Object.selectionForCompositeField "editingLockedBy" [] (object____) (identity >> Decode.nullable)


{-| The RSS enclosure for the object
-}
enclosure : SelectionSet (Maybe String) Taco.Object.MediaItem
enclosure =
      Object.selectionForField "(Maybe String)" "enclosure" [] (Decode.string |> Decode.nullable)


type alias EnqueuedScriptsOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String }

{-| Connection between the ContentNode type and the EnqueuedScript type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data

-}
enqueuedScripts : (EnqueuedScriptsOptionalArguments -> EnqueuedScriptsOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.ContentNodeToEnqueuedScriptConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
enqueuedScripts fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "enqueuedScripts" optionalArgs____ (object____) (identity >> Decode.nullable)


type alias EnqueuedStylesheetsOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String }

{-| Connection between the ContentNode type and the EnqueuedStylesheet type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data

-}
enqueuedStylesheets : (EnqueuedStylesheetsOptionalArguments -> EnqueuedStylesheetsOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.ContentNodeToEnqueuedStylesheetConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
enqueuedStylesheets fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "enqueuedStylesheets" optionalArgs____ (object____) (identity >> Decode.nullable)


type alias FileSizeOptionalArguments = { size : OptionalArgument Taco.Enum.MediaItemSizeEnum.MediaItemSizeEnum }

{-| The filesize in bytes of the resource

  - size - Size of the MediaItem to return

-}
fileSize : (FileSizeOptionalArguments -> FileSizeOptionalArguments)
 -> SelectionSet (Maybe Int) Taco.Object.MediaItem
fileSize fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { size = Absent }

        optionalArgs____ =
            [ Argument.optional "size" filledInOptionals____.size ((Encode.enum Taco.Enum.MediaItemSizeEnum.toString)) ]
                |> List.filterMap identity
    in
      Object.selectionForField "(Maybe Int)" "fileSize" optionalArgs____ (Decode.int |> Decode.nullable)


{-| The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
-}
guid : SelectionSet (Maybe String) Taco.Object.MediaItem
guid =
      Object.selectionForField "(Maybe String)" "guid" [] (Decode.string |> Decode.nullable)


{-| The globally unique identifier of the attachment object.
-}
id : SelectionSet Taco.ScalarCodecs.Id Taco.Object.MediaItem
id =
      Object.selectionForField "ScalarCodecs.Id" "id" [] (Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Whether the object is a node in the preview state
-}
isPreview : SelectionSet (Maybe Bool) Taco.Object.MediaItem
isPreview =
      Object.selectionForField "(Maybe Bool)" "isPreview" [] (Decode.bool |> Decode.nullable)


{-| Whether the object is restricted from the current viewer
-}
isRestricted : SelectionSet (Maybe Bool) Taco.Object.MediaItem
isRestricted =
      Object.selectionForField "(Maybe Bool)" "isRestricted" [] (Decode.bool |> Decode.nullable)


{-| The user that most recently edited the node
-}
lastEditedBy : SelectionSet decodesTo Taco.Object.ContentNodeToEditLastConnectionEdge
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
lastEditedBy object____ =
      Object.selectionForCompositeField "lastEditedBy" [] (object____) (identity >> Decode.nullable)


{-| The permalink of the post
-}
link : SelectionSet (Maybe String) Taco.Object.MediaItem
link =
      Object.selectionForField "(Maybe String)" "link" [] (Decode.string |> Decode.nullable)


{-| Details about the mediaItem
-}
mediaDetails : SelectionSet decodesTo Taco.Object.MediaDetails
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
mediaDetails object____ =
      Object.selectionForCompositeField "mediaDetails" [] (object____) (identity >> Decode.nullable)


{-| The id field matches the WP_Post-&gt;ID field.
-}
mediaItemId : SelectionSet Int Taco.Object.MediaItem
mediaItemId =
      Object.selectionForField "Int" "mediaItemId" [] (Decode.int)


{-| Url of the mediaItem
-}
mediaItemUrl : SelectionSet (Maybe String) Taco.Object.MediaItem
mediaItemUrl =
      Object.selectionForField "(Maybe String)" "mediaItemUrl" [] (Decode.string |> Decode.nullable)


{-| Type of resource
-}
mediaType : SelectionSet (Maybe String) Taco.Object.MediaItem
mediaType =
      Object.selectionForField "(Maybe String)" "mediaType" [] (Decode.string |> Decode.nullable)


{-| The mime type of the mediaItem
-}
mimeType : SelectionSet (Maybe String) Taco.Object.MediaItem
mimeType =
      Object.selectionForField "(Maybe String)" "mimeType" [] (Decode.string |> Decode.nullable)


{-| The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
-}
modified : SelectionSet (Maybe String) Taco.Object.MediaItem
modified =
      Object.selectionForField "(Maybe String)" "modified" [] (Decode.string |> Decode.nullable)


{-| The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
-}
modifiedGmt : SelectionSet (Maybe String) Taco.Object.MediaItem
modifiedGmt =
      Object.selectionForField "(Maybe String)" "modifiedGmt" [] (Decode.string |> Decode.nullable)


{-| The parent of the node. The parent object can be of various types
-}
parent : SelectionSet decodesTo Taco.Object.HierarchicalContentNodeToParentContentNodeConnectionEdge
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
parent object____ =
      Object.selectionForCompositeField "parent" [] (object____) (identity >> Decode.nullable)


{-| Database id of the parent node
-}
parentDatabaseId : SelectionSet (Maybe Int) Taco.Object.MediaItem
parentDatabaseId =
      Object.selectionForField "(Maybe Int)" "parentDatabaseId" [] (Decode.int |> Decode.nullable)


{-| The globally unique identifier of the parent node.
-}
parentId : SelectionSet (Maybe Taco.ScalarCodecs.Id) Taco.Object.MediaItem
parentId =
      Object.selectionForField "(Maybe ScalarCodecs.Id)" "parentId" [] (Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)


{-| The database id of the preview node
-}
previewRevisionDatabaseId : SelectionSet (Maybe Int) Taco.Object.MediaItem
previewRevisionDatabaseId =
      Object.selectionForField "(Maybe Int)" "previewRevisionDatabaseId" [] (Decode.int |> Decode.nullable)


{-| Whether the object is a node in the preview state
-}
previewRevisionId : SelectionSet (Maybe Taco.ScalarCodecs.Id) Taco.Object.MediaItem
previewRevisionId =
      Object.selectionForField "(Maybe ScalarCodecs.Id)" "previewRevisionId" [] (Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)


type alias SizesOptionalArguments = { size : OptionalArgument Taco.Enum.MediaItemSizeEnum.MediaItemSizeEnum }

{-| The sizes attribute value for an image.

  - size - Size of the MediaItem to calculate sizes with

-}
sizes : (SizesOptionalArguments -> SizesOptionalArguments)
 -> SelectionSet (Maybe String) Taco.Object.MediaItem
sizes fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { size = Absent }

        optionalArgs____ =
            [ Argument.optional "size" filledInOptionals____.size ((Encode.enum Taco.Enum.MediaItemSizeEnum.toString)) ]
                |> List.filterMap identity
    in
      Object.selectionForField "(Maybe String)" "sizes" optionalArgs____ (Decode.string |> Decode.nullable)


{-| The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
-}
slug : SelectionSet (Maybe String) Taco.Object.MediaItem
slug =
      Object.selectionForField "(Maybe String)" "slug" [] (Decode.string |> Decode.nullable)


type alias SourceUrlOptionalArguments = { size : OptionalArgument Taco.Enum.MediaItemSizeEnum.MediaItemSizeEnum }

{-| Url of the mediaItem

  - size - Size of the MediaItem to return

-}
sourceUrl : (SourceUrlOptionalArguments -> SourceUrlOptionalArguments)
 -> SelectionSet (Maybe String) Taco.Object.MediaItem
sourceUrl fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { size = Absent }

        optionalArgs____ =
            [ Argument.optional "size" filledInOptionals____.size ((Encode.enum Taco.Enum.MediaItemSizeEnum.toString)) ]
                |> List.filterMap identity
    in
      Object.selectionForField "(Maybe String)" "sourceUrl" optionalArgs____ (Decode.string |> Decode.nullable)


type alias SrcSetOptionalArguments = { size : OptionalArgument Taco.Enum.MediaItemSizeEnum.MediaItemSizeEnum }

{-| The srcset attribute specifies the URL of the image to use in different situations. It is a comma separated string of urls and their widths.

  - size - Size of the MediaItem to calculate srcSet with

-}
srcSet : (SrcSetOptionalArguments -> SrcSetOptionalArguments)
 -> SelectionSet (Maybe String) Taco.Object.MediaItem
srcSet fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { size = Absent }

        optionalArgs____ =
            [ Argument.optional "size" filledInOptionals____.size ((Encode.enum Taco.Enum.MediaItemSizeEnum.toString)) ]
                |> List.filterMap identity
    in
      Object.selectionForField "(Maybe String)" "srcSet" optionalArgs____ (Decode.string |> Decode.nullable)


{-| The current status of the object
-}
status : SelectionSet (Maybe String) Taco.Object.MediaItem
status =
      Object.selectionForField "(Maybe String)" "status" [] (Decode.string |> Decode.nullable)


{-| The template assigned to a node of content
-}
template : SelectionSet decodesTo Taco.Interface.ContentTemplate
 -> SelectionSet (Maybe decodesTo) Taco.Object.MediaItem
template object____ =
      Object.selectionForCompositeField "template" [] (object____) (identity >> Decode.nullable)


type alias TitleOptionalArguments = { format : OptionalArgument Taco.Enum.PostObjectFieldFormatEnum.PostObjectFieldFormatEnum }

{-| The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.

  - format - Format of the field output

-}
title : (TitleOptionalArguments -> TitleOptionalArguments)
 -> SelectionSet (Maybe String) Taco.Object.MediaItem
title fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { format = Absent }

        optionalArgs____ =
            [ Argument.optional "format" filledInOptionals____.format ((Encode.enum Taco.Enum.PostObjectFieldFormatEnum.toString)) ]
                |> List.filterMap identity
    in
      Object.selectionForField "(Maybe String)" "title" optionalArgs____ (Decode.string |> Decode.nullable)


{-| URI path for the resource
-}
uri : SelectionSet String Taco.Object.MediaItem
uri =
      Object.selectionForField "String" "uri" [] (Decode.string)
