-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Taco.Object.User exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Taco.Object
import Taco.Interface
import Taco.Union
import Taco.Scalar
import Taco.InputObject
import Taco.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)
import Taco.Enum.AvatarRatingEnum
type alias AvatarOptionalArguments = { size : OptionalArgument Int
 , forceDefault : OptionalArgument Bool
 , rating : OptionalArgument Taco.Enum.AvatarRatingEnum.AvatarRatingEnum }

{-| Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument.

  - size - The size attribute of the avatar field can be used to fetch avatars of different sizes. The value corresponds to the dimension in pixels to fetch. The default is 96 pixels.
  - forceDefault - Whether to always show the default image, never the Gravatar. Default false

-}
avatar : (AvatarOptionalArguments -> AvatarOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.Avatar
 -> SelectionSet (Maybe decodesTo) Taco.Object.User
avatar fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { size = Absent, forceDefault = Absent, rating = Absent }

        optionalArgs____ =
            [ Argument.optional "size" filledInOptionals____.size (Encode.int), Argument.optional "forceDefault" filledInOptionals____.forceDefault (Encode.bool), Argument.optional "rating" filledInOptionals____.rating ((Encode.enum Taco.Enum.AvatarRatingEnum.toString)) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "avatar" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| User metadata option name. Usually it will be &quot;wp_capabilities&quot;.
-}
capKey : SelectionSet (Maybe String) Taco.Object.User
capKey =
      Object.selectionForField "(Maybe String)" "capKey" [] (Decode.string |> Decode.nullable)


{-| A list of capabilities (permissions) granted to the user
-}
capabilities : SelectionSet (Maybe (List (Maybe String))) Taco.Object.User
capabilities =
      Object.selectionForField "(Maybe (List (Maybe String)))" "capabilities" [] (Decode.string |> Decode.nullable |> Decode.list |> Decode.nullable)


type alias CommentsOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String
 , where_ : OptionalArgument Taco.InputObject.UserToCommentConnectionWhereArgs }

{-| Connection between the User type and the Comment type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data
  - where_ - Arguments for filtering the connection

-}
comments : (CommentsOptionalArguments -> CommentsOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.UserToCommentConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.User
comments fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeUserToCommentConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "comments" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| Identifies the primary key from the database.
-}
databaseId : SelectionSet Int Taco.Object.User
databaseId =
      Object.selectionForField "Int" "databaseId" [] (Decode.int)


{-| Description of the user.
-}
description : SelectionSet (Maybe String) Taco.Object.User
description =
      Object.selectionForField "(Maybe String)" "description" [] (Decode.string |> Decode.nullable)


{-| Email address of the user. This is equivalent to the WP_User-&gt;user_email property.
-}
email : SelectionSet (Maybe String) Taco.Object.User
email =
      Object.selectionForField "(Maybe String)" "email" [] (Decode.string |> Decode.nullable)


type alias EnqueuedScriptsOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String }

{-| Connection between the User type and the EnqueuedScript type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data

-}
enqueuedScripts : (EnqueuedScriptsOptionalArguments -> EnqueuedScriptsOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.UserToEnqueuedScriptConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.User
enqueuedScripts fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "enqueuedScripts" optionalArgs____ (object____) (identity >> Decode.nullable)


type alias EnqueuedStylesheetsOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String }

{-| Connection between the User type and the EnqueuedStylesheet type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data

-}
enqueuedStylesheets : (EnqueuedStylesheetsOptionalArguments -> EnqueuedStylesheetsOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.UserToEnqueuedStylesheetConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.User
enqueuedStylesheets fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "enqueuedStylesheets" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| A complete list of capabilities including capabilities inherited from a role. This is equivalent to the array keys of WP_User-&gt;allcaps.
-}
extraCapabilities : SelectionSet (Maybe (List (Maybe String))) Taco.Object.User
extraCapabilities =
      Object.selectionForField "(Maybe (List (Maybe String)))" "extraCapabilities" [] (Decode.string |> Decode.nullable |> Decode.list |> Decode.nullable)


{-| First name of the user. This is equivalent to the WP_User-&gt;user_first_name property.
-}
firstName : SelectionSet (Maybe String) Taco.Object.User
firstName =
      Object.selectionForField "(Maybe String)" "firstName" [] (Decode.string |> Decode.nullable)


{-| The globally unique identifier for the user object.
-}
id : SelectionSet Taco.ScalarCodecs.Id Taco.Object.User
id =
      Object.selectionForField "ScalarCodecs.Id" "id" [] (Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Whether the object is restricted from the current viewer
-}
isRestricted : SelectionSet (Maybe Bool) Taco.Object.User
isRestricted =
      Object.selectionForField "(Maybe Bool)" "isRestricted" [] (Decode.bool |> Decode.nullable)


{-| Last name of the user. This is equivalent to the WP_User-&gt;user_last_name property.
-}
lastName : SelectionSet (Maybe String) Taco.Object.User
lastName =
      Object.selectionForField "(Maybe String)" "lastName" [] (Decode.string |> Decode.nullable)


{-| The preferred language locale set for the user. Value derived from get_user_locale().
-}
locale : SelectionSet (Maybe String) Taco.Object.User
locale =
      Object.selectionForField "(Maybe String)" "locale" [] (Decode.string |> Decode.nullable)


type alias MediaItemsOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String
 , where_ : OptionalArgument Taco.InputObject.UserToMediaItemConnectionWhereArgs }

{-| Connection between the User type and the mediaItem type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data
  - where_ - Arguments for filtering the connection

-}
mediaItems : (MediaItemsOptionalArguments -> MediaItemsOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.UserToMediaItemConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.User
mediaItems fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeUserToMediaItemConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "mediaItems" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| Display name of the user. This is equivalent to the WP_User-&gt;dispaly_name property.
-}
name : SelectionSet (Maybe String) Taco.Object.User
name =
      Object.selectionForField "(Maybe String)" "name" [] (Decode.string |> Decode.nullable)


{-| The nicename for the user. This field is equivalent to WP_User-&gt;user_nicename
-}
nicename : SelectionSet (Maybe String) Taco.Object.User
nicename =
      Object.selectionForField "(Maybe String)" "nicename" [] (Decode.string |> Decode.nullable)


{-| Nickname of the user.
-}
nickname : SelectionSet (Maybe String) Taco.Object.User
nickname =
      Object.selectionForField "(Maybe String)" "nickname" [] (Decode.string |> Decode.nullable)


type alias PagesOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String
 , where_ : OptionalArgument Taco.InputObject.UserToPageConnectionWhereArgs }

{-| Connection between the User type and the page type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data
  - where_ - Arguments for filtering the connection

-}
pages : (PagesOptionalArguments -> PagesOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.UserToPageConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.User
pages fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeUserToPageConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "pages" optionalArgs____ (object____) (identity >> Decode.nullable)


type alias PostsOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String
 , where_ : OptionalArgument Taco.InputObject.UserToPostConnectionWhereArgs }

{-| Connection between the User type and the post type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data
  - where_ - Arguments for filtering the connection

-}
posts : (PostsOptionalArguments -> PostsOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.UserToPostConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.User
posts fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeUserToPostConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "posts" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| The date the user registered or was created. The field follows a full ISO8601 date string format.
-}
registeredDate : SelectionSet (Maybe String) Taco.Object.User
registeredDate =
      Object.selectionForField "(Maybe String)" "registeredDate" [] (Decode.string |> Decode.nullable)


type alias RevisionsOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String
 , where_ : OptionalArgument Taco.InputObject.UserToContentRevisionUnionConnectionWhereArgs }

{-| Connection between the User and Revisions authored by the user

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data
  - where_ - Arguments for filtering the connection

-}
revisions : (RevisionsOptionalArguments -> RevisionsOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.UserToContentRevisionUnionConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.User
revisions fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeUserToContentRevisionUnionConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "revisions" optionalArgs____ (object____) (identity >> Decode.nullable)


type alias RolesOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String }

{-| Connection between the User type and the UserRole type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data

-}
roles : (RolesOptionalArguments -> RolesOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.UserToUserRoleConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.User
roles fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "roles" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| The slug for the user. This field is equivalent to WP_User-&gt;user_nicename
-}
slug : SelectionSet (Maybe String) Taco.Object.User
slug =
      Object.selectionForField "(Maybe String)" "slug" [] (Decode.string |> Decode.nullable)


{-| The unique resource identifier path
-}
uri : SelectionSet (Maybe String) Taco.Object.User
uri =
      Object.selectionForField "(Maybe String)" "uri" [] (Decode.string |> Decode.nullable)


{-| A website url that is associated with the user.
-}
url : SelectionSet (Maybe String) Taco.Object.User
url =
      Object.selectionForField "(Maybe String)" "url" [] (Decode.string |> Decode.nullable)


{-| The Id of the user. Equivalent to WP_User-&gt;ID
-}
userId : SelectionSet (Maybe Int) Taco.Object.User
userId =
      Object.selectionForField "(Maybe Int)" "userId" [] (Decode.int |> Decode.nullable)


{-| Username for the user. This field is equivalent to WP_User-&gt;user_login.
-}
username : SelectionSet (Maybe String) Taco.Object.User
username =
      Object.selectionForField "(Maybe String)" "username" [] (Decode.string |> Decode.nullable)
