-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Taco.Object.Comment exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Taco.Object
import Taco.Interface
import Taco.Union
import Taco.Scalar
import Taco.InputObject
import Taco.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)
import Taco.Enum.PostObjectFieldFormatEnum
{-| User agent used to post the comment. This field is equivalent to WP_Comment-&gt;comment_agent and the value matching the &quot;comment_agent&quot; column in SQL.
-}
agent : SelectionSet (Maybe String) Taco.Object.Comment
agent =
      Object.selectionForField "(Maybe String)" "agent" [] (Decode.string |> Decode.nullable)


{-| The approval status of the comment. This field is equivalent to WP_Comment-&gt;comment_approved and the value matching the &quot;comment_approved&quot; column in SQL.
-}
approved : SelectionSet (Maybe Bool) Taco.Object.Comment
approved =
      Object.selectionForField "(Maybe Bool)" "approved" [] (Decode.bool |> Decode.nullable)


{-| The author of the comment
-}
author : SelectionSet decodesTo Taco.Object.CommentToCommenterConnectionEdge
 -> SelectionSet (Maybe decodesTo) Taco.Object.Comment
author object____ =
      Object.selectionForCompositeField "author" [] (object____) (identity >> Decode.nullable)


{-| IP address for the author. This field is equivalent to WP_Comment-&gt;comment_author_IP and the value matching the &quot;comment_author_IP&quot; column in SQL.
-}
authorIp : SelectionSet (Maybe String) Taco.Object.Comment
authorIp =
      Object.selectionForField "(Maybe String)" "authorIp" [] (Decode.string |> Decode.nullable)


{-| ID for the comment, unique among comments.
-}
commentId : SelectionSet (Maybe Int) Taco.Object.Comment
commentId =
      Object.selectionForField "(Maybe Int)" "commentId" [] (Decode.int |> Decode.nullable)


{-| Connection between the Comment type and the ContentNode type
-}
commentedOn : SelectionSet decodesTo Taco.Object.CommentToContentNodeConnectionEdge
 -> SelectionSet (Maybe decodesTo) Taco.Object.Comment
commentedOn object____ =
      Object.selectionForCompositeField "commentedOn" [] (object____) (identity >> Decode.nullable)


type alias ContentOptionalArguments = { format : OptionalArgument Taco.Enum.PostObjectFieldFormatEnum.PostObjectFieldFormatEnum }

{-| Content of the comment. This field is equivalent to WP_Comment-&gt;comment_content and the value matching the &quot;comment_content&quot; column in SQL.

  - format - Format of the field output

-}
content : (ContentOptionalArguments -> ContentOptionalArguments)
 -> SelectionSet (Maybe String) Taco.Object.Comment
content fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { format = Absent }

        optionalArgs____ =
            [ Argument.optional "format" filledInOptionals____.format ((Encode.enum Taco.Enum.PostObjectFieldFormatEnum.toString)) ]
                |> List.filterMap identity
    in
      Object.selectionForField "(Maybe String)" "content" optionalArgs____ (Decode.string |> Decode.nullable)


{-| The unique identifier stored in the database
-}
databaseId : SelectionSet Int Taco.Object.Comment
databaseId =
      Object.selectionForField "Int" "databaseId" [] (Decode.int)


{-| Date the comment was posted in local time. This field is equivalent to WP_Comment-&gt;date and the value matching the &quot;date&quot; column in SQL.
-}
date : SelectionSet (Maybe String) Taco.Object.Comment
date =
      Object.selectionForField "(Maybe String)" "date" [] (Decode.string |> Decode.nullable)


{-| Date the comment was posted in GMT. This field is equivalent to WP_Comment-&gt;date_gmt and the value matching the &quot;date_gmt&quot; column in SQL.
-}
dateGmt : SelectionSet (Maybe String) Taco.Object.Comment
dateGmt =
      Object.selectionForField "(Maybe String)" "dateGmt" [] (Decode.string |> Decode.nullable)


{-| The globally unique identifier for the comment object
-}
id : SelectionSet Taco.ScalarCodecs.Id Taco.Object.Comment
id =
      Object.selectionForField "ScalarCodecs.Id" "id" [] (Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Whether the object is restricted from the current viewer
-}
isRestricted : SelectionSet (Maybe Bool) Taco.Object.Comment
isRestricted =
      Object.selectionForField "(Maybe Bool)" "isRestricted" [] (Decode.bool |> Decode.nullable)


{-| Karma value for the comment. This field is equivalent to WP_Comment-&gt;comment_karma and the value matching the &quot;comment_karma&quot; column in SQL.
-}
karma : SelectionSet (Maybe Int) Taco.Object.Comment
karma =
      Object.selectionForField "(Maybe Int)" "karma" [] (Decode.int |> Decode.nullable)


type alias ParentOptionalArguments = { where_ : OptionalArgument Taco.InputObject.CommentToParentCommentConnectionWhereArgs }

{-| Connection between the Comment type and the Comment type

  - where_ - Arguments for filtering the connection

-}
parent : (ParentOptionalArguments -> ParentOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.CommentToParentCommentConnectionEdge
 -> SelectionSet (Maybe decodesTo) Taco.Object.Comment
parent fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeCommentToParentCommentConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "parent" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| The database id of the parent comment node or null if it is the root comment
-}
parentDatabaseId : SelectionSet (Maybe Int) Taco.Object.Comment
parentDatabaseId =
      Object.selectionForField "(Maybe Int)" "parentDatabaseId" [] (Decode.int |> Decode.nullable)


{-| The globally unique identifier of the parent comment node.
-}
parentId : SelectionSet (Maybe Taco.ScalarCodecs.Id) Taco.Object.Comment
parentId =
      Object.selectionForField "(Maybe ScalarCodecs.Id)" "parentId" [] (Taco.ScalarCodecs.codecs |> Taco.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)


type alias RepliesOptionalArguments = { first : OptionalArgument Int
 , last : OptionalArgument Int
 , after : OptionalArgument String
 , before : OptionalArgument String
 , where_ : OptionalArgument Taco.InputObject.CommentToCommentConnectionWhereArgs }

{-| Connection between the Comment type and the Comment type

  - first - The number of items to return after the referenced "after" cursor
  - after - Cursor used along with the "first" argument to reference where in the dataset to get data
  - before - Cursor used along with the "last" argument to reference where in the dataset to get data
  - where_ - Arguments for filtering the connection

-}
replies : (RepliesOptionalArguments -> RepliesOptionalArguments)
 -> SelectionSet decodesTo Taco.Object.CommentToCommentConnection
 -> SelectionSet (Maybe decodesTo) Taco.Object.Comment
replies fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, last = Absent, after = Absent, before = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "where" filledInOptionals____.where_ (Taco.InputObject.encodeCommentToCommentConnectionWhereArgs) ]
                |> List.filterMap identity
    in
      Object.selectionForCompositeField "replies" optionalArgs____ (object____) (identity >> Decode.nullable)


{-| Type of comment. This field is equivalent to WP_Comment-&gt;comment_type and the value matching the &quot;comment_type&quot; column in SQL.
-}
type_ : SelectionSet (Maybe String) Taco.Object.Comment
type_ =
      Object.selectionForField "(Maybe String)" "type" [] (Decode.string |> Decode.nullable)
