-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Taco.Enum.ContentTypeEnum exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Allowed Content Types

  - Attachment - The Type of Content object
  - Page - The Type of Content object
  - Post - The Type of Content object

-}
type ContentTypeEnum
    = Attachment
    | Page
    | Post
list : List ContentTypeEnum
list =
    [Attachment, Page, Post]
decoder : Decoder ContentTypeEnum
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ATTACHMENT" ->
                        Decode.succeed Attachment

                    "PAGE" ->
                        Decode.succeed Page

                    "POST" ->
                        Decode.succeed Post

                    _ ->
                        Decode.fail ("Invalid ContentTypeEnum type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
        )
        

{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : ContentTypeEnum -> String
toString enum____ =
    case enum____ of
        Attachment ->
                "ATTACHMENT"


        Page ->
                "PAGE"


        Post ->
                "POST"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe ContentTypeEnum
fromString enumString____ =
    case enumString____ of
        "ATTACHMENT" ->
                Just Attachment


        "PAGE" ->
                Just Page


        "POST" ->
                Just Post

        _ ->
                Nothing
